[
  {
    "rule_code": "R02",
    "summary": "Descrição obrigatória em responses",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses.*",
    "field": "description",
    "check_text": "Todas as respostas devem conter o campo 'description'",
    "severity": "error",
    "hints": ["Inclua description clara no response"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R03",
    "summary": "Proibição de duplicação de parâmetros",
    "scope": "parameters",
    "op": "unique",
    "selector": "$.paths.*.*.parameters",
    "field": "name",
    "check_text": "Não pode haver parâmetros duplicados no mesmo nível",
    "severity": "error",
    "hints": ["Consolide ou renomeie parâmetros duplicados"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R04",
    "summary": "Nomenclatura em camelCase",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties",
    "field": "key",
    "check_text": "Todos os nomes de atributos devem estar em camelCase",
    "severity": "warning",
    "hints": ["Ex: customerId, orderDate"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R05",
    "summary": "Harmonização de tipos string",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": ["string", "integer", "boolean", "number", "array", "object"],
    "check_text": "Tipos devem seguir o conjunto permitido",
    "severity": "error",
    "hints": ["Verifique se type está no padrão JSON Schema"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R06",
    "summary": "Tamanho máximo em strings sensíveis",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "maxLength",
    "check_text": "Campos como CPF, CNPJ, CEP devem ter maxLength definido corretamente",
    "severity": "error",
    "hints": ["CPF maxLength=11", "CNPJ maxLength=14"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R07",
    "summary": "operationId deve ser único",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "operationId",
    "check_text": "Cada operação deve ter operationId único",
    "severity": "error",
    "hints": ["Renomeie operationId duplicados"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R08",
    "summary": "Campos obrigatórios em schemas",
    "scope": "schema",
    "op": "ensure",
    "selector": "$.components.schemas.*",
    "field": "required",
    "check_text": "Schemas principais devem declarar atributos obrigatórios",
    "severity": "warning",
    "hints": ["Inclua required: [] com atributos essenciais"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R09",
    "summary": "Descrição obrigatória em propriedades",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Toda propriedade de schema deve ter description",
    "severity": "warning",
    "hints": ["Forneça descrição clara para cada campo"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R10",
    "summary": "Uso correto de arrays",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "items",
    "check_text": "Propriedades com type=array devem definir items",
    "severity": "error",
    "hints": ["Exemplo: {\"type\": \"array\", \"items\": {\"type\": \"string\"}}"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "GET, PUT e PATCH devem ter response 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses",
    "methods": ["get", "put", "patch"],
    "field": "200",
    "check_text": "GET, PUT e PATCH devem ter response 200",
    "severity": "error",
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R11",
    "summary": "Todos os campos relacionados a CPF devem ter 11 caracteres",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties",
    "field": "*cpf*",
    "value": { "min": 11, "max": 11 },
    "check_text": "Qualquer campo que contenha 'cpf' no nome deve ter exatamente 11 caracteres",
    "severity": "error",
    "hints": ["Defina minLength=11 e maxLength=11"],
    "autofix": true,
    "oas_version": null
  },
  {
    "rule_code": "R58",
    "summary": "Propriedades com mesmo nome devem ter definição uniforme",
    "scope": "schema+parameters",
    "op": "uniform_all",
    "selector": "$.components.schemas.*.properties",
    "check_text": "Campos iguais em diferentes locais devem ter os mesmos atributos",
    "severity": "error",
    "autofix": true,
    "hints": ["Exemplo: managerDocumentNumber deve ter sempre {type=string, maxLength=14}"],
    "oas_version": null
  },  
  {
    "rule_code": "R58",
    "summary": "Propriedades com mesmo nome devem ter definição uniforme",
    "scope": "schema+parameters",
    "op": "uniform_all",
    "selector": "$.paths.*.*.parameters[*]",
    "check_text": "Campos iguais em diferentes locais devem ter os mesmos atributos",
    "severity": "error",
    "autofix": true,
    "hints": ["Exemplo: managerDocumentNumber deve ter sempre {type=string, maxLength=14}"],
    "oas_version": null
  },  
  {
    "rule_code": "R52",
    "summary": "Nomes de atributos e parâmetros devem seguir lowerCamelCase",
    "scope": "schemas+parameters",
    "op": "regex",
    "selector": "$..name",  
    "pattern": "^[a-z]+[a-zA-Z0-9]*$",
    "check_text": "Nomes devem seguir lowerCamelCase (sem hífen, sem underscore)",
    "severity": "warning",
    "autofix": true,
    "hints": ["Exemplo: customerId, orderDate"],
    "oas_version": null
  },  
  {
    "rule_code": "R52",
    "summary": "URLs devem começar com http://Caminho_backend/",
    "scope": "servers",
    "op": "value_regex",
    "selector": "$.servers[*].url",
    "pattern": "^http://Caminho_backend/.*$",
    "check_text": "O campo 'url' deve começar com 'http://Caminho_backend/'",
    "severity": "error",
    "autofix": true,
    "value": "http://Caminho_backend/api/fees/v2",
    "oas_version": null
  },
  {
    "rule_code": "R52",
    "summary": "Parâmetros devem seguir lowerCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "check_text": "Os nomes de parâmetros devem estar em lowerCamelCase (sem hífen, sem underscore)",
    "severity": "error",
    "autofix": true,
    "hints": ["Exemplo: investmentFundName, customerId"],
    "oas_version": null
  },
  {
    "rule_code": "R0X",
    "summary": "Todas as operações devem ter description em responses",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses.*",
    "field": "description",
    "check_text": "Todas as operações devem ter descrição nas respostas",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma description para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R15",
    "summary": "Propriedades não podem ter espaços em branco ou nomes inválidos contendo 'version'",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties",
    "pattern": "^(?!\\s)(?!.*\\s)(?!.*version\\s).*",
    "field": "key",
    "check_text": "Nomes de propriedades não podem conter espaços nem terminar em 'version'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Remova espaços do nome da propriedade",
      "Evite nomes ambíguos como ' version' ou 'myVersion '"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Endpoints devem estar no plural",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths['/investment-fund']",
    "field": "/investment-fund",
    "value": "/investment-funds",
    "check_text": "Endpoints devem estar no plural",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R34",
    "summary": "tag Info deve conter a propriedade 'version' obrigatoriamente",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.info",
    "field": "version",
    "check_text": "Todas as respostas devem ter a tag Info com a propriedade 'version' obrigatoriamente",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'version' à tag Info"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R36",
    "summary": "Valida se a propriedade 'schemes' foi definida",
    "scope": "schemas",
    "op": "ensure",
    "selector": "$.components",
    "field": "schemas",
    "check_text": "Cada servidor deve ter a propriedade 'schemes' definida",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'schemes' em cada servidor"
    ],
    "oas_version": null
  }
]