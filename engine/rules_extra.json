[
  {
    "rule_code": "B3",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter description",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R07",
    "summary": "operationId deve ser único",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "operationId",
    "check_text": "Cada operação deve ter operationId único",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie operationIds duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R3",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Informações detalhadas no link abaixo",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "",
    "field": "",
    "check_text": "Não fornecido",
    "severity": "Aplicada",
    "autofix": false,
    "hints": [
      "Informações detalhadas no link abaixo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R0X",
    "summary": "Valida a formatação do nome do atributo",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties[*].name",
    "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
    "field": "name",
    "check_text": "Nomes de atributos devem seguir o padrão camelCase ou snake_case",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R35",
    "summary": "Parâmetros internos no nome de arquivos devem ser evitados",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].filename",
    "field": "*",
    "check_text": "Nomes de arquivos devem seguir uma nomenclatura consistente e sem parâmetros internos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use nomes de arquivos que não contenham parâmetros internos"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R01",
    "summary": "Propriedade 'description' deve existir em todos os schemas",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter a descrição 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Info tag deve conter 'description'",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].info",
    "field": "description",
    "check_text": "Todos os servidores devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada servidor"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R32",
    "summary": "Valida se a propriedade 'title' da tag 'title' existe",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].tags.*.properties.title",
    "field": "title",
    "check_text": "Todas as tags devem ter a propriedade 'title'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma propriedade 'title' em todas as tags"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R11",
    "summary": "Info deve ter título",
    "scope": "info",
    "op": "ensure",
    "selector": "$.info",
    "field": "title",
    "check_text": "Todos os objetos 'info' devem ter um título",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um título para o objeto 'info'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R34",
    "summary": "Aceita somente letras, números, hífen e espaço em",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-zA-Z0-9\\s-]*$",
    "field": "name",
    "check_text": "Parâmetros devem aceitar somente letras, números, hífen e espaço em branco",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "A propriedade 'version' deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "version",
    "check_text": "Todos os schemas devem ter a propriedade 'version'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'version' em todos os schemas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R34",
    "summary": "tag Info deve conter a propriedade 'version' obrigatoriamente",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].tags[0].properties.*",
    "field": "'version'",
    "check_text": "Todas as respostas devem ter a tag Info com a propriedade 'version' obrigatoriamente",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'version' à tag Info"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R_FAIL_15",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R16",
    "summary": "Versão deve seguir o padrão semântico",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].version",
    "field": "*version*",
    "check_text": "A versão deve seguir um padrão semântico",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a versão segue o padrão MAJOR.MINOR.PATCH ou outro padrão semântico"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R17",
    "summary": "Versão do OpenAPI deve seguir o padrão semântico",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.info.version",
    "field": "version",
    "check_text": "A versão do OpenAPI deve seguir o padrão semântico (ex: 1.0.0-rc1)",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a versão segue o padrão semântico"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R36",
    "summary": "Valida se a propriedade 'schemes' foi definida",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].schemes",
    "field": "schemes",
    "check_text": "Cada servidor deve ter a propriedade 'schemes' definida",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'schemes' em todos os servidores"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R39",
    "summary": "Propriedade 'schemesError' deve ser obrigatória em 'oas2'",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].extensions.openapi.v3.0.1.servers[*].schemesError",
    "field": "schemesError",
    "check_text": "A propriedade 'schemesError' deve ser obrigatória em 'oas2'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'schemesError' em todos os servidores"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "RXX",
    "summary": "A propriedade 'schemes' deve existir",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].schemes",
    "field": "",
    "check_text": "Todos os servidores devem ter a propriedade 'schemes'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma propriedade 'schemes' com um esquema de segurança válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R21",
    "summary": "URLs devem começar com https://",
    "scope": "servers",
    "op": "value_regex",
    "selector": "$.servers[*].url",
    "pattern": "^https://.*$",
    "field": "url",
    "check_text": "O campo 'url' deve começar com 'https://'",
    "severity": "error",
    "autofix": true,
    "value": "https://Caminho_backend/api/fees/v2",
    "hints": [
      "Corrija o valor para iniciar com https://"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R22",
    "summary": "Todas as solicitações devem passar somente pelo método HTTP especificado",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Todas as solicitações devem passar somente pelo método HTTP especificado",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o método HTTP está sendo usado corretamente em todas as operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R23",
    "summary": "Valida se a propriedade 'api-host' é host",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].url",
    "field": "api-host",
    "check_text": "A propriedade 'api-host' deve ser um host válido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se a propriedade 'api-host' é um host válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R24",
    "summary": "Propriedade 'host' é obrigatória em OpenAPI 2.0",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].host",
    "field": "host",
    "check_text": "A propriedade 'host' é obrigatória em OpenAPI 2.0",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma propriedade 'host' para cada servidor"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R25",
    "summary": "Propriedade ' ' do JSON deve ser removida",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*'",
    "value": "",
    "check_text": "Propriedades do JSON não devem conter espaços em branco",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Remova propriedades com espaços em branco"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R26",
    "summary": "Respostas devem conter valor padrão",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem conter um valor padrão",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione um valor padrão para todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R27",
    "summary": "(Caminho_backend) Preenchimento default = Caminho_backendError oas2",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*default*",
    "value": "Caminho_backendError",
    "check_text": "(Caminho_backend) Preenchimento default deve ser Caminho_backendError oas2",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina default como Caminho_backendError"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R28",
    "summary": "'basePath' deve ser uma string",
    "scope": "servers",
    "op": "enum",
    "selector": "$.servers[*].url",
    "field": "basePath",
    "value": [
      "string"
    ],
    "check_text": "'basePath' deve ser uma string",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'basePath' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R29",
    "summary": "basePathError deve ser declarado",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].basePathError",
    "field": "basePathError",
    "check_text": "O campo 'basePathError' deve ser declarado em todos os servidores",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione basePathError aos servidores"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R30",
    "summary": "basePath deve ser definido",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].url",
    "field": "basePath",
    "check_text": "Todos os servidores devem ter basePath definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma basePath a qualquer um dos servidores"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R31",
    "summary": "basePath deve ser uma string",
    "scope": "servers",
    "op": "value_regex",
    "selector": "$.servers[*].url",
    "pattern": "^https://(.*)$",
    "field": "basePath",
    "check_text": "O campo 'basePath' deve ser uma string",
    "severity": "error",
    "autofix": true,
    "value": "",
    "hints": [
      "Verifique se o valor do campo 'basePath' é uma string"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Endpoints devem seguir o padrão /api/{versão}",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "check_text": "Todos os endpoints devem seguir o padrão /api/{versão}",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: /api/v2 ou /api/1.0"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R33",
    "summary": "'basePath' do JSON deve ser definido",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].url",
    "field": "basePath",
    "check_text": "Todos os servidores devem ter o atributo 'basePath' definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um valor para basePath em todos os servidores"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R34",
    "summary": "'vN' deve ser igual ao Major do OpenAPI",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].version",
    "field": "vN",
    "value": "$1.x",
    "check_text": "'vN' deve ser igual ao Major do OpenAPI",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Atualize o 'vN' para corresponder ao Major do OpenAPI"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R35",
    "summary": "nome do arquivo temporário deve seguir formatação basePath",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].url",
    "field": "*temp_file_name*",
    "value": "",
    "check_text": "O nome do arquivo temporário deve seguir a formatação basePath",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se o nome do arquivo temporário segue a mesma formatação que a basePath"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R36",
    "summary": "Nome de arquivos deve seguir o padrão nomeArquivo.extensao",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*nomeArquivo*",
    "check_text": "Nomes de arquivos devem seguir o padrão nomeArquivo.extensao",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: arquivoDeTeste.json"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R37",
    "summary": "VersãoBasepathPropriedade deve ter o seu basePath",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].variables.basePath",
    "field": "*",
    "value": "$ref",
    "check_text": "Cada VersãoBasepathPropriedade deve ter o seu basePath definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina o valor do campo 'basePath' para referenciar a definição do basePath"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R38",
    "summary": "'vN' deve ser igual ao Major da propriedade",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].version",
    "field": "*vN*",
    "value": "$..major",
    "check_text": "'vN' deve ser igual ao Major da propriedade 'version'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o valor de 'vN' é igual ao valor de 'major'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R39",
    "summary": "'version' existentes no JSON.Formatação basePath",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].url",
    "field": "*version*",
    "check_text": "Todas as URLs devem seguir a formatação basePath para o campo 'version'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se a versão está em conformidade com a formatação basePath"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R40",
    "summary": "basePath deve ser único",
    "scope": "servers",
    "op": "unique",
    "selector": "$.servers[*].url",
    "field": "basePath",
    "check_text": "Cada servidor deve ter basePath único",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie basePaths duplicados"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R41",
    "summary": "Valida se a propriedade 'servers' foi definida",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers",
    "field": "*",
    "check_text": "Todas as APIs devem ter a propriedade 'servers'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma propriedade 'servers' com pelo menos um servidor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R42",
    "summary": "ServersError deve ser declarado na versão OAS3",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*]",
    "field": "*",
    "check_text": "ServersError deve ser declarado na versão OAS3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a declaração do ServersError está correta"
    ],
    "oas_version": "oas3"
  },
  {
    "rule_code": "R_FAIL_43",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R44",
    "summary": "URLs devem começar com 'https://Caminho_'",
    "scope": "servers",
    "op": "value_regex",
    "selector": "$.servers[*].url",
    "pattern": "^https://Caminho_.*$",
    "field": "url",
    "check_text": "O campo 'url' deve começar com 'https://Caminho_'",
    "severity": "error",
    "autofix": true,
    "value": "https://Caminho_backend/api/fees/v2",
    "hints": [
      "Corrija o valor para iniciar com 'https://Caminho_'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R45",
    "summary": "Contexto da URL deve estar em lowerCamelCase",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].url",
    "pattern": "^/([a-z][a-zA-Z0-9]*)+$",
    "field": "contexto",
    "check_text": "Contexto da URL deve estar em lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R46",
    "summary": "Nomes devem conter somente minúsculas ou hífens como separadores",
    "scope": "paths+parameters+servers+responses+schema+schema properties",
    "op": "regex",
    "selector": "$.*",
    "pattern": "^[a-z0-9-]*$",
    "field": "*",
    "check_text": "Nomes devem conter somente minúsculas ou hífens como separadores",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investment-fund-name"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R47",
    "summary": "Url está com a formatação inválida",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].url",
    "pattern": "^(http|https)://.+$",
    "field": "url",
    "check_text": "A url deve seguir o padrão http:// ou https://",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se a url está com a formatação correta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R48",
    "summary": "Valores devem ser do tipo API",
    "scope": "responses",
    "op": "enum",
    "selector": "$.paths.*.*.responses[*].content.*/*",
    "field": "*",
    "value": [
      "application/json",
      "application/xml"
    ],
    "check_text": "Valores devem ser do tipo API",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'content' segue o padrão OpenAPI"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R49",
    "summary": "Valores de 'api' devem ser válidos",
    "scope": "servers",
    "op": "enum",
    "selector": "$.servers[*].tags[0]",
    "field": "api",
    "value": [
      "api",
      "internal-api",
      "api-interna"
    ],
    "check_text": "Valores de 'api' devem ser válidos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'api' segue o padrão permitido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R99",
    "summary": "<nome API> deve estar em lowerCamelCase",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].url",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "url",
    "check_text": "<nome API> deve estar em lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: caminho-backend"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R51",
    "summary": "Nomes devem conter somente minúsculas ou hífens como separadores",
    "scope": "paths+parameters+schema properties",
    "op": "regex",
    "selector": "$.*",
    "pattern": "^[a-z0-9-]*$",
    "field": "*",
    "check_text": "Nomes devem conter somente minúsculas ou hífens como separadores",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investment-fund-name"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R52",
    "summary": "Versão da API na URL deve seguir o padrão X.X.X",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].url",
    "pattern": "^https://api\\.example\\.com/v(?<version>\\d+)\\..*$",
    "field": "version",
    "check_text": "A versão da API na URL deve seguir o padrão X.X.X",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: https://api.example.com/v1.2.3"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R53",
    "summary": "formatação URL deve ser válida",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].url",
    "field": "*",
    "check_text": "A formatação da URL deve seguir as regras de validez",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a URL segue o padrão RFC 3986"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R54",
    "summary": "Nome de arquivos temporários deve seguir o padrão 'oas3-' + hash",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*temp*",
    "check_text": "Nomes de arquivos temporários devem seguir o padrão 'oas3-' + hash",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use um nome de arquivo temporário que siga o padrão 'oas3-' + hash"
    ],
    "oas_version": "oas3"
  },
  {
    "rule_code": "R55",
    "summary": "Verifique se o 'vN' da propriedade 'url' é válida",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties.url.value",
    "pattern": "^[a-zA-Z0-9]+$",
    "field": "url.value",
    "check_text": "Verifique se o 'vN' da propriedade 'url' é válido",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R56",
    "summary": "Nome do arquivo deve ser no maiúsculo",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].url",
    "field": "*Major*",
    "value": "*Maior*",
    "check_text": "O nome do arquivo deve ser no maiúsculo",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Corrija o nome do arquivo para seguir a convenção de maiúsculo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R57",
    "summary": "O Major do nome do arquivo deve ser um número",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].name",
    "pattern": "^\\d+(\\.\\d+)*$",
    "field": "name",
    "check_text": "O Major do nome do arquivo deve ser um número",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: 1.0.0"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_58",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R59",
    "summary": "URL deve seguir formato padrão",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].url",
    "pattern": "^(http|https)://([a-zA-Z0-9]+(\\.[a-zA-Z]{2,3}){1}|[a-zA-Z0-9]+\\.[a-zA-Z]{2,3})(:[0-9]{1,5})?(/.*)?$",
    "field": "url",
    "check_text": "URL deve seguir formato padrão",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se URL segue o padrão http(s)://domain.com ou http(s)://domain.com:port"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R60",
    "summary": "Nome de arquivos deve seguir o padrão nome_arquivo.extensao",
    "scope": "files",
    "op": "regex",
    "selector": "$.name",
    "pattern": "^[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$",
    "field": "name",
    "check_text": "Nomes de arquivos devem seguir o padrão nome_arquivo.extensao",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: openapi_specification.yaml"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_61",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R62",
    "summary": "Versão deve ser maior que a versão mínima",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].url.split('/')[-1]",
    "field": "*versi*",
    "check_text": "A versão deve ser maior que a versão mínima",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a versão é maior que a versão mínima"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R63",
    "summary": "'vN' deve ser removido da propriedade 'url'",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].url",
    "field": "*vN*",
    "value": "",
    "check_text": "'vN' deve ser removido da propriedade 'url'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Remova o 'vN' da URL"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R64",
    "summary": "Diferente do Major da propriedade",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].properties.major",
    "field": "*",
    "check_text": "O campo 'major' deve ser diferente do valor da propriedade",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o campo 'major' não é igual ao valor da propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R65",
    "summary": "A propriedade 'version' deve conter um número maior que zero",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].properties.version",
    "field": "version",
    "check_text": "A propriedade 'version' deve conter um número maior que zero",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se a versão é um número maior que zero"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R66",
    "summary": "Todos os campos devem ter descrição",
    "scope": "schema+parameters+responses",
    "op": "ensure",
    "selector": "$.*",
    "field": "*",
    "check_text": "Todos os campos devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R67",
    "summary": "A propriedade 'url' deve ser informada",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].url",
    "field": "url",
    "check_text": "Todos os servidores devem ter a propriedade 'url'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma URL válida para cada servidor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R68",
    "summary": "'vN' deve ser removido da propriedade 'url'",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].url",
    "field": "*vN*",
    "value": "",
    "check_text": "'vN' deve ser removido da propriedade 'url'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Remova o 'vN' da propriedade 'url'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R69",
    "summary": "formatação de versão inválida. Deve ser no padrão sem ponto (ex: v1, v2)",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].url",
    "field": "version",
    "check_text": "A versão deve ser no padrão sem ponto (ex: v1, v2)",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Corrija a formatação da versão para seguir o padrão 'vX'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R70",
    "summary": "A propriedade 'servers' deve existir em todos os objetos do schema",
    "scope": "schema",
    "op": "ensure",
    "selector": "$.components.schemas.*",
    "field": "servers",
    "check_text": "Todos os objetos do schema devem ter a propriedade 'servers'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'servers' em todos os objetos do schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R71",
    "summary": "URL deve começar com http://Caminho_backend/",
    "scope": "servers",
    "op": "value_regex",
    "selector": "$.servers[*].url",
    "pattern": "^http://Caminho_backend/.*$",
    "field": "url",
    "check_text": "O campo 'url' deve começar com 'http://Caminho_backend/'",
    "severity": "error",
    "autofix": true,
    "value": "http://Caminho_backend/api/di-calculations/v1",
    "hints": [
      "Corrija o valor para iniciar com http://Caminho_backend/"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R72",
    "summary": "Propriedade deve conter conteúdo",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades devem conter algum valor",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todas as propriedades têm um valor definido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R73",
    "summary": "'tags' deve seguir a formatação: Primeira letra em maiúsculo e as restantes minúsculas",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].tags[*]",
    "pattern": "^[A-Z][a-z]*$",
    "field": "",
    "check_text": "'tags' deve seguir a formatação: Primeira letra em maiúsculo e as restantes minúsculas",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: 'api', 'backend', 'fees'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R74",
    "summary": "Letras de cada termo maiúsculo e as",
    "scope": "responses",
    "op": "regex",
    "selector": "$.paths.*.*.responses[*].description",
    "pattern": "^[A-Za-z]+\\s+de+[A-Za-z]+$",
    "field": "description",
    "check_text": "Descrições devem ter cada termo maiúsculo e as letras separadas por espaço",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: Investment Fund Description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R75",
    "summary": "Espaços entre os termos. Representa o agrupador de assuntos em uma API.",
    "scope": "paths",
    "op": "OTHER",
    "selector": "$.paths[*]",
    "field": "*",
    "check_text": "Espaços entre os termos devem ser usados para representar o agrupador de assuntos em uma API.",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use espaços entre os termos para melhor organização e legibilidade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R76",
    "summary": "Agrupador 'tags' deve seguir o mesmo idioma da API",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].tags",
    "field": "*",
    "check_text": "Todos os tags devem ser em um único idioma",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os tags estão no mesmo idioma"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R77",
    "summary": "Primeira letra de cada termo maiúscula e as demais",
    "scope": "paths, parameters, schema properties, responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os nomes devem seguir o padrão de primeira letra maiúscula e as demais minúsculas",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: InvestmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R78",
    "summary": "Nomes devem ser em minúsculas e permitir espaços entre os termos",
    "scope": "parameters+schema properties",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "pattern": "^([a-z\\s]+)([a-z\\s]*)*$",
    "field": "*",
    "check_text": "Nomes devem ser em minúsculas e permitir espaços entre os termos",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R79",
    "summary": "Todo recurso deve possuir uma propriedade 'tag'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*tag*",
    "check_text": "Todos os recursos devem possuir uma propriedade 'tag'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'tag' em todos os esquemas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R80",
    "summary": "Todos os endpoints devem ter description",
    "scope": "paths",
    "op": "ensure",
    "selector": "$.paths.*",
    "field": "*",
    "check_text": "Cada endpoint deve ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada endpoint"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R81",
    "summary": "Todo recurso deve possuir uma única propriedade",
    "scope": "schema properties",
    "op": "unique",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Cada recurso deve possuir apenas uma propriedade",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se cada recurso possui somente uma propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R82",
    "summary": "tags devem ser únicos",
    "scope": "servers",
    "op": "unique",
    "selector": "$.servers[*].tags",
    "field": "tags",
    "check_text": "Cada servidor deve ter tags únicas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie tags duplicadas"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R83",
    "summary": "Deve existir pelo menos 1 tag",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].tags",
    "field": "*",
    "check_text": "Cada servidor deve ter ao menos uma tag",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione pelo menos uma tag a cada servidor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R84",
    "summary": "Propriedade 'name' deve ser única",
    "scope": "paths+servers",
    "op": "unique",
    "selector": "$.paths[*].name, $.servers[*].name",
    "field": "name",
    "check_text": "Todas as propriedades 'name' devem ser únicas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie nomes duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R01",
    "summary": "Valida se o 'name' da 'tags' existe",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].tags",
    "field": "*name*",
    "check_text": "Todas as tags devem ter um nome definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um nome a cada tag"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R86",
    "summary": "JSON devem ter pelo menos um 'name' declarado",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os JSONs devem ter pelo menos um campo 'name'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um campo 'name' a todos os JSONs"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R87",
    "summary": "Todo recurso deve possuir uma única propriedade",
    "scope": "schema properties",
    "op": "unique",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Cada recurso deve possuir apenas uma propriedade",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se cada recurso possui somente uma propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R88",
    "summary": "Valide se o 'recurso' segue as regras de nomeação",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[?(@.name=='recurso')]",
    "field": "*",
    "check_text": "O campo 'recurso' deve seguir as regras de nomeação",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o campo 'recurso' segue as regras de nomeação definidas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R89",
    "summary": "formatação da B3 deve seguir a regra",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas da B3 devem seguir a formatação correta",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a formatação da B3 está correta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_90",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R91",
    "summary": "'Recurso' não pode iniciar com um",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "value": "",
    "check_text": "'Recurso' deve começar com letra seguida de caracteres",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se os nomes dos recursos não começam com um caractere"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R92",
    "summary": "Deve ser minúsculo e não conter verbo",
    "scope": "paths",
    "op": "OTHER",
    "selector": "$.paths[*]",
    "field": "*",
    "check_text": "Todos os nomes de endpoints devem ser minúsculos e não conter verbo",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: /create-investment-fund deve ser /investment-fund"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R93",
    "summary": "Endpoints não devem terminar com '/'",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "check_text": "Endpoints devem ser definidos sem o caractere '/' no final",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se os endpoints não terminam com '/'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R94",
    "summary": "'Parâmetro' do 'recurso' deve estar em lowerCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "'Parâmetro' deve seguir o padrão lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R95",
    "summary": "Todos os campos devem ter um nome válido",
    "scope": "schema+parameters+responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os campos devem seguir o padrão de nomenclatura válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos estão no formato válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R96",
    "summary": "Padrão Lower Camel Case para nomes de atributos ou parâmetros",
    "scope": "parameters+schema properties",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "*",
    "check_text": "Nomes de atributos e parâmetros devem seguir o padrão Lower Camel Case",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R97",
    "summary": "Formatação de recurso na página Estrutura da URI deve seguir OpenAPI 3.0",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].url",
    "field": "*",
    "check_text": "A formatação de recurso na página Estrutura da URI deve seguir OpenAPI 3.0",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a URL segue o padrão OpenAPI 3.0"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R98",
    "summary": "Valida se o 'recurso' deveria ter pelo menos um slash",
    "scope": "paths",
    "op": "regex",
    "selector": "$.paths[*]",
    "pattern": "^/.*\\//.*$",
    "field": "",
    "check_text": "Todos os endpoints devem ter pelo menos um slash",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione ao menos um slash em seus endpoints"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R99",
    "summary": "Termos devem estar no singular",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*singular*",
    "value": "*plural*",
    "check_text": "Termos devem estar no singular",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no singular"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R100",
    "summary": "O recurso deve ser um 'get' e possuir uma resposta",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*/*",
    "field": "*",
    "check_text": "Todos os recursos devem ter ao menos uma resposta",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma resposta para o recurso"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R101",
    "summary": "'recurso' deve ser um 'post', 'put' ou 'delete'",
    "scope": "paths",
    "op": "enum",
    "selector": "$.paths.*.*",
    "field": "*method*",
    "value": [
      "post",
      "put",
      "delete"
    ],
    "check_text": "'recurso' deve ser um 'post', 'put' ou 'delete'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o método está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R102",
    "summary": "A lista de métodos específicos deve ser única",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "methods",
    "check_text": "Cada operação deve ter uma lista de métodos única",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se a lista de métodos é única"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R103",
    "summary": "O recurso não possui nenhum termo",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "O recurso deve ter um nome definido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Defina um nome para o recurso"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R104",
    "summary": "Existência de 'array'",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Verifique se existe algum campo que contenha 'array' no nome deve ser um array",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: investmentFunds deve ser um array"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R105",
    "summary": "Nome do deve possuir pelo menos 1 termo no recurso",
    "scope": "paths",
    "op": "OTHER",
    "selector": "$.paths.*",
    "field": "*",
    "check_text": "O nome do deve conter pelo menos um termo relacionado ao recurso",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o nome do endpoint contém pelo menos um termo que descreva o recurso"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R106",
    "summary": "Endpoints devem estar no plural",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "check_text": "Endpoints devem estar no plural",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Endpoints devem estar no plural",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths.*.get",
    "field": "*",
    "check_text": "Endpoints devem estar no plural",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R108",
    "summary": "Listas devem ser enviadas em formato array",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths..*/post, $.paths..*/put, $.paths..*/patch",
    "field": "*list*",
    "check_text": "Quando o método é POST, PUT ou PATCH, os parâmetros devem ser enviados em formato array",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se os valores estão em formato array"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R109",
    "summary": "Valida se o parâmetro do tipo 'path' é válido",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[?(@.in=='path')]",
    "field": "*",
    "check_text": "Verifique se o parâmetro do tipo 'path' é válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Verifique se o valor de 'in' é 'query' ou 'header'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R110",
    "summary": "Regra 110 deve ser representada no 'brigatório recur'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*110*",
    "check_text": "Regra 110 deve ser representada no 'brigatório recur'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Represente a regra 110 corretamente no 'brigatório recur'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R111",
    "summary": "'entre chaves' deve ser '{}'. Formatação Recurso",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "'entre chaves' deve ser '{}'. Formatação Recurso",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Use '{}' para representar um objeto vazio"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R112",
    "summary": "Parâmetro deve ser declarado no path do recurso",
    "scope": "paths",
    "op": "OTHER",
    "selector": "$.paths[*].parameters",
    "field": "*",
    "check_text": "Todos os parâmetros devem ser declarados no path do recurso",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os parâmetros estão declarados no path do recurso"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R113",
    "summary": "Campos devem ser representados entre chaves {}",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].type",
    "field": "*",
    "check_text": "Todos os campos devem ser representados entre chaves {}",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: \"number\" deve ser representado como \"number\""
    ],
    "oas_version": null
  },
  {
    "rule_code": "R114",
    "summary": "Parâmetros devem ser obrigatórios e estar declarados como 'in: path'",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*]",
    "field": "*",
    "check_text": "Todos os parâmetros devem ser obrigatórios e estar declarados como 'in: path'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os parâmetros estão declarados com 'in: path' e 'required = true'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R07",
    "summary": "Propriedades devem ser únicas",
    "scope": "schema properties",
    "op": "unique",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem ser únicas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todas as propriedades são únicas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R116",
    "summary": "Valida a declaração da propriedade",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades devem ser declaradas corretamente",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as propriedades estão declaradas corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R07",
    "summary": "operationId deve ser único",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "operationId",
    "check_text": "Cada operação deve ter operationId único",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie operationIds duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R118",
    "summary": "operationId deve ser único",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "operationId",
    "check_text": "Cada operação deve ter operationId único",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie operationIds duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R119",
    "summary": "Adotar padrão Pascal Case",
    "scope": "paths+parameters+schema properties",
    "op": "OTHER",
    "selector": "$.paths[*].*.name, $.parameters[*].name, $.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os nomes devem seguir o padrão Pascal Case",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: InvestmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_120",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "",
    "summary": "Valida se existe declaração de",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Verifique se existe declaração de",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: 'Responda apenas com JSON válido'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R122",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Descrição é necessária em todas as operações",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R123",
    "summary": "Payload deve seguir uma estrutura válida",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Payload deve seguir uma estrutura válida",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o payload segue a estrutura correta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R124",
    "summary": "Deve ser declarado um 'structure'",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*structure*",
    "check_text": "Todas as propriedades devem ter um 'structure' declarado",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o atributo 'type' com valor 'object' ou 'array'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_125",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R_FAIL_126",
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R_FAIL_127",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R_FAIL_128",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "",
    "summary": "Responda apenas com JSON válido",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem ser JSON válidos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o campo 'responses' contém apenas JSON válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R130",
    "summary": "Propriedade 'mesValida' deve ser declarada",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*mesValida*",
    "check_text": "Todas as propriedades devem conter a propriedade 'mesValida'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'mesValida' em todos os schemas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R131",
    "summary": "'consumes' deve ser definido quando existe 'payload' no corpo da resposta",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema$refs",
    "field": "",
    "check_text": "'consumes' deve ser definido quando existe 'payload' no corpo da resposta",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione consumes com o tipo de conteúdo apropriado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R132",
    "summary": "'Request' e se o tipo de dado não foi especificado",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].type",
    "field": "*",
    "check_text": "'Request' e se o tipo de dado não foi especificado",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os parâmetros têm um tipo definido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R133",
    "summary": "Declarar 'consumes' e não 'produces'",
    "scope": "operations",
    "op": "update",
    "selector": "$.paths.*.*",
    "field": "consumes",
    "value": "produces",
    "check_text": "Declare 'consumes' em vez de 'produces'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Certifique-se de que as operações estejam declarando corretamente o tipo de conteúdo consumido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Existe 'payload' no Request",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.request.body.content.schema.$ref",
    "field": "*",
    "check_text": "Todos os requests devem conter um schema que contenha 'payload'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o schema do request contém 'payload'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R135",
    "summary": "Propriedade 'consumes' deve ser única",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "consumes",
    "check_text": "Cada operação deve ter consumes único",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie consumes duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R136",
    "summary": "Não existe 'payload' no corpo das respostas",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema$",
    "field": "*",
    "check_text": "Todas as respostas devem conter um campo 'payload'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um campo 'payload' no esquema de cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R137",
    "summary": "Formato de dados inválido: '*/*' Propriedade deve ser declarada somente se consumes",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Propriedades com '*/*' devem ser declaradas somente se consumes",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a propriedade é necessária"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R138",
    "summary": "Não deve haver espaço em branco no nome do campo 'payload' em uma declaração de erro RequestError",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.examples.*",
    "field": "*RequestError*",
    "check_text": "Não deve haver espaço em branco no nome do campo 'payload' em uma declaração de erro RequestError",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Remova o espaço em branco no nome do campo 'payload'"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R139",
    "summary": "Propriedades devem ser declaradas",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem ser declaradas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todas as propriedades foram declaradas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R140",
    "summary": "'produces' deve existir se houver 'payload' no corpo da resposta",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema$refs",
    "field": "*",
    "check_text": "'produces' deve existir se houver 'payload' no corpo da resposta",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione o campo 'produces' com o tipo MIME correspondente ao payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R141",
    "summary": "'Response' e se o tipo de dado não foi definido",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "'Response' e se o tipo de dado não foi definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina o tipo de dado para cada campo da resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R142",
    "summary": "Declarar 'produces' e não 'consumes'",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].produces",
    "field": "produces",
    "value": "contentTypes",
    "check_text": "Declare 'produces' e não 'consumes'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Use 'produces' ao invés de 'consumes'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R143",
    "summary": "Existe 'payload' em 'Response'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Todas as respostas devem conter um 'payload' válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se existe um schema para o payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R144",
    "summary": "A propriedade 'produces' declarada deve ser única",
    "scope": "servers",
    "op": "unique",
    "selector": "$.servers[*].produces",
    "field": "produces",
    "check_text": "Cada servidor deve ter uma propriedade 'produces' única",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie produces duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_145",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R146",
    "summary": "Formato de dados inválido: '*/*' Propriedade 'produces' deve ser declarada somente",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].produces",
    "field": "*",
    "check_text": "Propriedade 'produces' deve ser declarada somente",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Remova a propriedade 'produces' se não for necessária"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R147",
    "summary": "Não deve haver espaços em branco no payload",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Não deve haver espaços em branco no payload",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o payload não contém espaços em branco"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R148",
    "summary": "tBodyValida se o conteúdo da propriedade ' tBody' for string",
    "scope": "responses",
    "op": "value_regex",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "pattern": "^#/components/schemas/.*$",
    "field": "*tBody*",
    "check_text": "A propriedade ' tBody' deve ser uma string",
    "severity": "error",
    "autofix": true,
    "value": "",
    "hints": [
      "Verifique se o tipo da propriedade 'tBody' é string"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_149",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R150",
    "summary": "Formato de dados inválido: '*/*'Valida se a propriedade 'content' (requestBody e response) é válida",
    "scope": "responses+operations",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content",
    "field": "*",
    "check_text": "A propriedade 'content' deve ser válida em requestBody e response",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a propriedade 'content' está definida corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R151",
    "summary": "Regra 151 não foi definida.Error oas3",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Regra 151 não foi definida.Error oas3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a regra está completa e correta"
    ],
    "oas_version": "oas3"
  },
  {
    "rule_code": "R152",
    "summary": "Verifique se existe 'payload' no 'Request'",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*].in",
    "field": "in",
    "check_text": "Todos os parâmetros devem ter 'payload' como valor de 'in'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione 'in': 'body' para todos os parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R153",
    "summary": "Não é permitido 'payload' no 'request'",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].in",
    "field": "*",
    "check_text": "O campo 'in' deve ser diferente de 'payload' em todos os parâmetros de request",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use outros valores para o campo 'in', como 'query', 'header', 'path', etc."
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Método GET não deve aceitar payload no request",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths['*'].get",
    "field": "*",
    "check_text": "O método GET não deve aceitar payload no request",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o método GET não está aceitando payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Parâmetro 'in' deve ser válido",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].in",
    "field": "*",
    "check_text": "O campo 'in' deve ser válido para os parâmetros",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o valor do campo 'in' está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R156",
    "summary": "requestBodyError deve ser definido em OpenAPI 2 ou 3",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.post",
    "field": "*",
    "check_text": "Defina requestBodyError corretamente em OpenAPI 2 ou 3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o requestBodyError está definido corretamente"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R157",
    "summary": "Refoas3Valida se a propriedade '$ref' foi definida corretamente",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].$ref",
    "field": "$ref",
    "check_text": "Verifique se a propriedade '$ref' foi definida corretamente",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o esquema referenciado existe e se é compatível com o tipo de dados esperado"
    ],
    "oas_version": "oas3"
  },
  {
    "rule_code": "R158",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R159",
    "summary": "'payload' no 'in: body' deve ser 'application/json'",
    "scope": "parameters",
    "op": "update",
    "selector": "$.paths.*.post.requestBody.content.*/*",
    "field": "*",
    "value": "application/json",
    "check_text": "'payload' deve ser 'application/json' quando o tipo for 'in: body'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o tipo do content é 'application/json'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R160",
    "summary": "É obrigatório a declaração do '$ref'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "$ref",
    "check_text": "Todas as respostas devem ter a declaração do '$ref'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o '$ref' nas respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R161",
    "summary": "$ref deve ser declarado obrigatoriamente",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*].$ref",
    "field": "$ref",
    "check_text": "Todas as propriedades devem ter a declaração do '$ref' obrigatoriamente",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o '$ref' às propriedades que não possuem"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Existência de um 'payload' em requests",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.post",
    "field": "requestBody",
    "check_text": "Todas as operações POST devem ter um payload",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um requestBody com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R163",
    "summary": "Declaração de 'payload' é necessária",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.post",
    "field": "requestBody",
    "check_text": "Todas as operações POST devem ter declaração de 'payload'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma declaração de 'payload' para a operação POST"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R164",
    "summary": "Todas as respostas devem ter description",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*description*",
    "check_text": "Todas as operações devem ter descrição nas respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "do  ou do . payload Request Response",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Responses devem conter 'do' ou 'do .' no payload Request Response",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todas as responses contêm 'do' ou 'do .' no payload Request Response"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R166",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R167",
    "summary": "Todo payload deve ser envelopado",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "value": "{ \"type\": \"object\", \"properties\": { \"data\": {} } }",
    "check_text": "Todos os payloads devem ser envelopados",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma envoltura ao payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R169",
    "summary": "'relacionamento' é obrigatório. dataTodo payload deve ser envelopado obrigatoriamente",
    "scope": "parameters",
    "op": "update",
    "selector": "$.paths.*.*",
    "field": "*dataTodo*",
    "value": "{\"dataTodo\": *}",
    "check_text": "'relacionamento' 'dataTodo' deve ser obrigatoriamente envolvido no payload",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o campo 'dataTodo' ao payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R170",
    "summary": "Array dataError deve ser opcional",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*dataError*",
    "check_text": "'dataError' deve ser opcional em respostas de erro",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se 'dataError' é opcional em respostas de erro"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R171",
    "summary": "Verifique se foi declarado",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*]",
    "field": "*",
    "check_text": "Todos os servidores devem ser declarados",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os servidores estão presentes"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R172",
    "summary": "Relacionamentos diferentes de data não devem ser usados",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*[*]",
    "field": "*relacionamento*",
    "check_text": "Relacionamentos diferentes de 'data' não devem ser usados",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use apenas relacionamentos de tipo 'data'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R173",
    "summary": "no payload do Request.",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.in*.*",
    "field": "*",
    "check_text": "Não deve haver nenhum payload no request",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o campo 'in' está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R174",
    "summary": "Declaração inválida de 'classe' fora do escopo permitido",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*classe*",
    "check_text": "A declaração de 'classe' não é permitida fora do escopo definido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o campo está no escopo correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R175",
    "summary": "'data' no payload do 'Request'. Todo deve ser envelopado pelo 'payload'",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].in",
    "field": "*data*",
    "check_text": "'data' no payload do Request deve ser envelopado pelo 'payload'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Envolva o campo 'data' em um objeto chamado 'payload'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R176",
    "summary": "Para garantir a estrutura válida: ata",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*.in",
    "field": "*",
    "check_text": "Estrutura de ata deve ser válida",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a estrutura de 'ata' é válida"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R177",
    "summary": "HTTP Code deve ser igual a 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].httpCode",
    "field": "httpCode",
    "check_text": "Todas as operações devem ter response com httpCode igual a 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R178",
    "summary": "' foi utilizado como Ok",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.examples.*",
    "field": "*",
    "check_text": "' foi utilizado como Ok deve ser substituído por uma descrição mais significativa",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione uma descrição mais significativa"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Retorno de sucesso para os métodos devem conter 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].response[*]",
    "field": "200",
    "check_text": "Todos os métodos devem ter um retorno de sucesso 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma resposta com statusCode=200 e description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R180",
    "summary": "Todos os métodos GET, PUT e PATCH devem ter descrição",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações GET, PUT e PATCH devem ter descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Retorno Sucesso para 'get, put ou post' deve ser apenas JSON válido",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths..*..*.responses.200",
    "field": "content.application/json",
    "check_text": "Retorno Sucesso para 'get, put ou post' deve ser apenas JSON válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o retorno é apenas JSON válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "HTTPCode deve ser 200 em PATCH",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.patch.*",
    "field": "200",
    "check_text": "Todas as operações devem ter response 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R183",
    "summary": "A propriedade ' ' deve ter description",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Respostas devem conter o valor padrão 'Ok'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "description",
    "check_text": "Todas as operações devem ter a descrição 'Ok' na resposta",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione description com o valor 'Ok' para todas as operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R185",
    "summary": "Responses devem conter 200 e 201",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "",
    "check_text": "Todas as operações devem ter responses 200 e 201",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 e responses.201 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R186",
    "summary": "Métodos devem retornar código HTTP adequado",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Todos os métodos devem retornar código HTTP adequado",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o código HTTP retornado é adequado para o método utilizado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R187",
    "summary": "Responses devem conter 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].code",
    "field": "code",
    "check_text": "Todas as operações devem ter response 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses com code 200 e description 'Ok'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Para GET, PUT e PATCH, deve haver erro em caso de falha",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*[?(@.methods=='get')|(*[@.methods=='put')|(*[@.methods=='patch'))]",
    "field": "responses.400",
    "check_text": "Para GET, PUT e PATCH, deve haver erro em caso de falha",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma resposta 400 com description"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R189",
    "summary": "HTTP Code deve ser 201 ou 202",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "httpCode",
    "check_text": "HTTP Code deve ser 201 ou 202",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.201 e/ou responses.202 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R190",
    "summary": "Resposta deve conter 'foi utilizado como retorno de sucesso'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*200*",
    "check_text": "Todas as operações devem ter uma resposta com a mensagem 'foi utilizado como retorno de sucesso'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma resposta 200 com a mensagem 'foi utilizado como retorno de sucesso'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Respostas devem conter posts",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.''.post.responses",
    "field": "*",
    "value": [
      "201",
      "202"
    ],
    "check_text": "Responses devem conter 201 e 202",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses.201 e responses.202 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R192",
    "summary": "Respectivas descrições devem ser 'Created' ou",
    "scope": "responses",
    "op": "enum",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "description",
    "value": [
      "Created"
    ],
    "check_text": "Descrições devem ser 'Created' ou",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se as descrições seguem o padrão"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Sucesso deve ter um retorno para POST",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*/post/*",
    "field": "200",
    "check_text": "Todas as operações POST devem ter um retorno 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R39",
    "summary": "HTTPCode deve ser ajustado (201 ou 202)",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "value": {
      "httpCode": [
        "201",
        "202"
      ]
    },
    "check_text": "HTTPCode deve ser ajustado para 201 ou 202",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se o httpCode está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "A propriedade 'description' deve conter",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "description",
    "check_text": "Todas as operações devem ter description em suas respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R196",
    "summary": "O valor padrão 'Created' deve ser usado em respostas HTTP 201",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*[?(@.methods==\"post\")].responses[\"201\"]",
    "field": "description",
    "value": "Created",
    "check_text": "O valor padrão 'Created' deve ser usado em respostas HTTP 201",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use o valor padrão 'Created' nas descrições das respostas HTTP 201"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Responses devem conter 201",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths['*'].post.responses",
    "field": "201",
    "check_text": "Todas as operações POST devem ter response 201",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.201 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R198",
    "summary": "Propriedade 'description' deve conter texto",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição para suas respostas",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R199",
    "summary": "HTTP Method 'Accept' deve conter 'application/json'",
    "scope": "operations",
    "op": "update",
    "selector": "$.paths.*.*",
    "field": "responses[*].headers.Accept",
    "value": [
      "application/json"
    ],
    "check_text": "HTTP Method 'Accept' deve conter 'application/json'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione ou verifique se o header 'Accept' contém 'application/json'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R202",
    "summary": "Responses devem conter 202",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths..*.post.responses",
    "field": "202",
    "check_text": "Todas as operações POST devem ter response 202",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.202 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R201",
    "summary": "Método deve retornar código HTTP 201 ou 202",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.post",
    "field": "responses.201, responses.202",
    "check_text": "Todos os métodos POST devem retornar código HTTP 201 ou 202",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.201 e/ou responses.202 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Respostas devem conter 201",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses",
    "field": "201",
    "check_text": "Todas as operações devem ter response 201",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.201 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R203",
    "summary": "Obrigatório declarar 'code': '202' e 'description'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter um campo 'code' com o valor '202' e um campo 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione os campos 'code': '202' e 'description' em todas as operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R204",
    "summary": "HTTP Code deve ser 204",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].httpCode",
    "field": "204",
    "check_text": "Todas as operações devem ter response 204 quando não houver conteúdo a ser retornado",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses.204 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "'foi utilizado' não deve ser utilizado no Content",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.examples.*",
    "field": "*",
    "check_text": "'foi utilizado' não deve ser utilizado no Content",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use uma expressão mais clara para descrever o conteúdo da resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Como retorno de sucesso para o, deve conter 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].response[*]",
    "field": "200",
    "check_text": "Todas as operações devem ter response 200 como retorno de sucesso",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R207",
    "summary": "Sucesso deve ter um retorno",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].204",
    "field": "204",
    "check_text": "Todas as operações devem ter response 204",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.204 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R208",
    "summary": "Ajustar 'HTTP Code' 204",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*httpCode*",
    "value": "204",
    "check_text": "Ajustar 'HTTP Code' 204",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se o httpCode está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R209",
    "summary": "A propriedade 'description' deve conter",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "description",
    "check_text": "Todas as operações devem ter description em 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada response"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R210",
    "summary": "Resposta vazia deve conter status 204",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "204",
    "check_text": "Todas as operações devem ter response 204 quando a resposta for vazia",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses.204 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R211",
    "summary": "Responses devem conter 204 e delete",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "",
    "check_text": "Todas as operações devem ter response 204 e delete",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.204 com description e responses.delete"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R212",
    "summary": "Retornar HTTP Code 204 somente em métodos DELETE",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.delete.*",
    "field": "204",
    "check_text": "O método DELETE deve retornar HTTP Code 204",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.204 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R213",
    "summary": "Responses devem conter 204 (No Content)",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].code",
    "field": "204",
    "check_text": "Todas as operações devem ter response 204 (No Content)",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.204 com description"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R214",
    "summary": "Parâmetro deve ser 'x-v'",
    "scope": "parameters",
    "op": "enum",
    "selector": "$.paths.*.*.parameters[*].name",
    "field": "*",
    "value": [
      "x-v"
    ],
    "check_text": "Parâmetros devem ser 'x-v'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o parâmetro está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Respostas devem conter 'Content-Type' e 'application/json'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem conter 'Content-Type' e 'application/json'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione 'Content-Type': 'application/json' em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R216",
    "summary": "Code de Sucesso (200 a 204)",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "code",
    "check_text": "Todas as operações devem ter códigos de sucesso entre 200 e 204",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses com code 200 a 204"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R217",
    "summary": "Declaração de parâmetro x-v deve seguir o padrão",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[?(@.name=='x-v')]",
    "field": "*",
    "check_text": "Declaração de parâmetro x-v deve seguir o padrão",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se a declaração do parâmetro x-v segue o padrão OpenAPI"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R218",
    "summary": "Propriedade 'headers' deve conter parâmetro padrão 'x-v'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].headers",
    "field": "*",
    "check_text": "Todas as respostas devem conter a propriedade 'headers' com o parâmetro padrão 'x-v'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'headers' em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R219",
    "summary": "Obrigatoriedade do parâmetro de saída 'x-v' no HTTP",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].headers",
    "field": "x-v",
    "check_text": "Todas as operações devem ter o parâmetro 'x-v' na resposta",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione headers.x-v com valor válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R220",
    "summary": "Code da família 200 a 204 deve ser OAS2",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "value": "oas_2.0",
    "check_text": "Todos os códigos de resposta da família 200 a 204 devem ser OAS2",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o código de resposta está em conformidade com OAS2"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R221",
    "summary": "Parâmetro x-v deve ser declarado",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[?(@.name=='x-v')]",
    "field": "*",
    "check_text": "Todos os endpoints devem ter o parâmetro 'x-v' declarado",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o parâmetro 'x-v' em todos os endpoints"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_222",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R223",
    "summary": "Propriedade 'description' deve existir",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].response[0]",
    "field": "description",
    "check_text": "Todas as respostas devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R224",
    "summary": "Parâmetro deve seguir o padrão B3 'x-v'",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^x-[a-zA-Z]+$",
    "field": "name",
    "check_text": "Parâmetros devem seguir o padrão B3 'x-v'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: x-version"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "A propriedade 'description' deve existir em todas as operações",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R226",
    "summary": "Parâmetro 'x-v' deve conter um valor",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[?(@.name=='x-v')]",
    "field": "*",
    "check_text": "Todos os parâmetros 'x-v' devem conter um valor",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um valor para o parâmetro 'x-v'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R227",
    "summary": "Versão da API deve seguir o padrão 'X.X.X-rcY'",
    "scope": "servers",
    "op": "regex",
    "selector": "$.servers[*].tags[0]",
    "pattern": "^\\d+\\.\\d+\\.\\d+-rc\\w+$",
    "field": "version",
    "check_text": "A versão da API deve seguir o padrão 'X.X.X-rcY'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: 1.0.0-rc1"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R228",
    "summary": "'API version. E.g.: 1.0.0-rc1' deve ser único",
    "scope": "servers",
    "op": "unique",
    "selector": "$.servers[*].apiVersion",
    "field": "apiVersion",
    "check_text": "'API version' deve ser único em cada servidor",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todas as versões da API são únicas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R229",
    "summary": "Parametro Padrao 'x-v' deve ser um número inteiro positivo",
    "scope": "parameters",
    "op": "enum",
    "selector": "$.paths.*.*.parameters[*].name",
    "field": "x-v",
    "value": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20
    ],
    "check_text": "O parametro 'x-v' deve ser um número inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'x-v' segue o padrão esperado"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "RXX",
    "summary": "Parâmetro deve ser do tipo string",
    "scope": "parameters",
    "op": "enum",
    "selector": "$.paths.*.*.parameters[*].type",
    "field": "*",
    "value": [
      "string"
    ],
    "check_text": "Todos os parâmetros devem ser do tipo string",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o tipo dos parâmetros segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R231",
    "summary": "'header' que inicie com 'x-' deve seguir o padrão",
    "scope": "responses",
    "op": "regex",
    "selector": "$.paths.*.*.responses[*].headers[*].name",
    "pattern": "^x-[a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "'header' que inicie com 'x-' deve seguir o padrão",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: x-correlationId"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R232",
    "summary": "Todos os termos devem estar em lowerCamelCase",
    "scope": "paths",
    "op": "regex",
    "selector": "$.paths[*].operationId",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "operationId",
    "check_text": "Todos os termos devem seguir lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: getInvestmentFund"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Somente minúsculas",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-z]*$",
    "field": "name",
    "check_text": "Parâmetros devem ser somente minúsculas",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R234",
    "summary": "Todos os campos x- devem seguir a especificação OpenAPI",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$.x-*",
    "field": "*",
    "check_text": "Todos os campos que começam com 'x-' devem seguir a especificação OpenAPI",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos x- estão de acordo com a especificação OpenAPI"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R235",
    "summary": "formatação utilizando Camel Case",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties[*].name",
    "pattern": "^[A-Z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Propriedades devem seguir a formatação Camel Case",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R236",
    "summary": "Todo parâmetro que inicie com 'header' deve seguir o padrão",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^header[A-Za-z0-9]*$",
    "field": "name",
    "check_text": "Todos os parâmetros que iniciam com 'header' devem seguir o padrão",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: headerName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_237",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R238",
    "summary": "Todo parâmetro 'header' que não seja deve ser deve ser único",
    "scope": "parameters",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "name",
    "check_text": "Cada parâmetro 'header' deve ter um nome único",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie headers duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R239",
    "summary": "Todos os nomes de atributo ou parâmetro devem começar com 'x-'",
    "scope": "parameters+schema properties",
    "op": "update",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "field": "*",
    "value": "",
    "check_text": "Todos os nomes de atributo ou parâmetro devem começar com 'x-'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: x-investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_240",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R241",
    "summary": "Responder deve seguir a regra de formatação",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem seguir a regra de formatação",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as respostas estão no formato esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R242",
    "summary": "Nomes de atributos ou parâmetros não podem começar com 'x' minúsculo",
    "scope": "parameters+schema properties",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "pattern": "^(?!x)[a-zA-Z0-9]*$",
    "field": "*",
    "check_text": "Nomes de atributos ou parâmetros não podem começar com 'x' minúsculo",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R243",
    "summary": "Nomes de atributos ou parâmetros não devem conter traços",
    "scope": "parameters+schema properties",
    "op": "update",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "field": "*",
    "value": "",
    "check_text": "Nomes de atributos ou parâmetros não devem conter traços",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes com underline para representar traços (ex: investment_fundName)"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R244",
    "summary": "Segundo termo deve ser todo minúsculo",
    "scope": "paths",
    "op": "regex",
    "selector": "$.paths[*].path",
    "pattern": "^.*\\s(.*)$",
    "field": "2º termo",
    "check_text": "O segundo termo deve ser todo minúsculo",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R245",
    "summary": "Termos separados por hífen devem ser em minúsculo",
    "scope": "responses",
    "op": "regex",
    "selector": "$.paths.*.*.responses[*].description",
    "pattern": "^[a-z]+[-]+[a-zA-Z0-9]*$",
    "field": "description",
    "check_text": "Termos separados por hífen devem ser em minúsculo",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investment-fund-name"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R246",
    "summary": "Valida se todos os HTTP Code Padrão",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter códigos HTTP padrão",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se os códigos HTTP estão nos valores aceitos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R247",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R248",
    "summary": "Responses devem conter HTTP Code (400, 429, 500 e 503)",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter responses com códigos HTTP 400, 429, 500 e 503",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.400, responses.429, responses.500 e responses.503 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R249",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R250",
    "summary": "Descrição padrão do HTTPCode deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "description",
    "check_text": "Descrição padrão do HTTPCode deve ser fornecida para todas as operações",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada código HTTP"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R251",
    "summary": "Respostas 400 devem ser 'Bad Request'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "400",
    "check_text": "Todas as operações devem ter response 400 com description 'Bad Request'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.400 com description 'Bad Request'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R252",
    "summary": "Descrição padrão do HTTPCode deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "Descrição padrão do HTTPCode deve ser fornecida para todas as operações",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione descrição para cada código HTTP"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R253",
    "summary": "Resposta 401 deve ser 'Unauthorized'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "401",
    "check_text": "Todas as operações devem ter resposta 401 com o valor 'Unauthorized'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione ou atualize a resposta 401 para 'Unauthorized'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R254",
    "summary": "Descrição padrão do HTTPCode deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "Descrição padrão do HTTPCode deve ser fornecida para todas as operações",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada código HTTP"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R255",
    "summary": "Resposta 403 deve ser 'Forbidden'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[403].description",
    "field": "description",
    "check_text": "Resposta 403 deve ser 'Forbidden'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione description='Forbidden' em respostas.403"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R256",
    "summary": "Descrição padrão do HTTPCode deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "Descrição padrão do HTTPCode deve ser fornecida para todas as operações",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada código HTTP"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R257",
    "summary": "404 deve ser 'Not Found'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "404",
    "check_text": "Todas as operações devem ter response 404 com o texto 'Not Found'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.404 com description e texto 'Not Found'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R258",
    "summary": "Descrição padrão do HTTPCode deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "Descrição padrão do HTTPCode deve ser fornecida para todas as operações",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada código HTTP"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Respostas devem conter 429",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "429",
    "check_text": "Todas as operações devem ter response 429",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.429 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Descrição padrão do HTTPCode =",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "A descrição padrão do HTTPCode deve ser alterada.",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Altere a descrição padrão do HTTPCode para uma descrição mais significativa."
    ],
    "oas_version": null
  },
  {
    "rule_code": "R261",
    "summary": "Respostas devem conter 500",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "500",
    "check_text": "Todas as operações devem ter response 500",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.500 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R262",
    "summary": "Descrição padrão do HTTPCode deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "Descrição padrão do HTTPCode deve ser fornecida para todas as operações",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada código HTTP"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R263",
    "summary": "Responses devem conter 503",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "503",
    "check_text": "Todas as operações devem ter response 503",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.503 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R264",
    "summary": "Descrição padrão do HTTPCode deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "description",
    "check_text": "Descrição padrão do HTTPCode deve ser fornecida para todas as operações",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada código HTTP"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "504 deve ser 'Gateway Timeout'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "504",
    "check_text": "Todas as operações devem ter response 504 com description 'Gateway Timeout'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.504 com description 'Gateway Timeout'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R266",
    "summary": "HTTP Code padrão e obrigatórios devem ser declarados",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Todos os endpoints devem ter HTTP Code padrão e obrigatórios declarados",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione HTTP Code padrão e obrigatórios em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Responses devem conter 400",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "400",
    "check_text": "Todas as operações devem ter response 400",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.400 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Respostas devem conter 429 - Too Many Requests",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "429",
    "check_text": "Todas as operações devem ter response 429 - Too Many Requests",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.429 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Responses devem conter 500",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses",
    "field": "500",
    "check_text": "Todas as operações devem ter response 500",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.500 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R270",
    "summary": "Responses devem conter 503",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "503",
    "check_text": "Todas as operações devem ter response 503",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.503 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R271",
    "summary": "Declaração dos HTTP Code padrão é opcional",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "A declaração de códigos HTTP padrão é opcional",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Se desejar, adicione códigos HTTP padrão nas respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Responses devem conter 404",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "404",
    "check_text": "Todas as operações devem ter response 404",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.404 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R273",
    "summary": "Resposta deve conter Gateway TimeoutError 504",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "504",
    "check_text": "Todas as operações devem ter response 504 Gateway TimeoutError",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.504 com description"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R_FAIL_274",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R275",
    "summary": "HTTP Code deve ser 422",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "httpCode",
    "check_text": "Todas as operações devem ter response 422",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.422 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R276",
    "summary": "Não declarar HTTPCode = 422 no",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "200, 422",
    "check_text": "Não deve haver HTTPCode = 422 no campo '200' ou '422'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Remova o HTTPCode 422 do campo '200' ou '422'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R277",
    "summary": "'delete' método não deve utilizar classe",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "'delete' método não deve utilizar classe",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use 'delete' sem classe"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R278",
    "summary": "Respostas devem conter 'Error' ou 'Errors'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*error*",
    "check_text": "Todas as operações devem ter resposta 'Error' ou 'Errors'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses.error com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R279",
    "summary": "Chamadas dos HTTP Code devem estar entre 400 e 499",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter respostas com códigos HTTP entre 400 e 499",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione respostas.400 a respostas.499 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R280",
    "summary": "Delete methods devem retornar status code 204 ou 205",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.delete.*",
    "field": "*",
    "check_text": "Quando o método for 'delete', as respostas devem retornar status code 204 ou 205",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.204 ou responses.205 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R281",
    "summary": "Não retorna HTTP Code = 422",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "422",
    "check_text": "Responses não devem conter 422",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.422 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R282",
    "summary": "Não chamar classe padrão erros de negócio",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.examples.*",
    "field": "*",
    "check_text": "Não chamar classe padrão erros de negócio em respostas",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Crie classes personalizadas para erros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R283",
    "summary": "Qualquer outro código HTTP de 400 a 599 (Erros)",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Qualquer outro código HTTP de 400 a 599 deve ser tratado",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione uma resposta para cada código HTTP de erro entre 400 e 599"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R284",
    "summary": "HttpCode422 deve ser declarado",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "422",
    "check_text": "Todas as operações devem ter response 422 declarada",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses.422 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "responses com o retorno de sucesso",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses",
    "field": "*",
    "check_text": "responses com o retorno de sucesso",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as operações possuem um retorno de sucesso"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R286",
    "summary": "HTTP Code padrão, para cenário de erro",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].responses[?(@.responseCode=='500')]",
    "field": "responseCode",
    "check_text": "HTTP Code padrão deve ser 500 para cenário de erro",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.500 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R287",
    "summary": "Valida se o HTTP Code '422' foi retornado nas respostas",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "422",
    "check_text": "Todas as operações devem retornar o código HTTP 422 quando houver um erro de validação",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses.422 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R288",
    "summary": "Payload deve conter campos obrigatórios",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Todos os campos obrigatórios devem estar presentes no payload",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os campos obrigatórios estão presentes"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_289",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R290",
    "summary": "Todas as operações devem ter response 200",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Todas as operações devem ter response 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description para todas as operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R291",
    "summary": "HTTP Code '422' deve ser declarado",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "422",
    "check_text": "Todas as operações devem ter response 422 declarada",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.422 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R292",
    "summary": "Respostas devem não conter payload",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*payload*",
    "check_text": "Respostas devem não conter campo 'payload'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Remova o campo 'payload' das respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_293",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R32",
    "summary": "Respostas devem conter 422",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].code",
    "field": "422",
    "check_text": "Todas as operações devem ter response 422",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.422 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R295",
    "summary": "Declaração inválida, fora do padrão",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "A declaração não se encaixa em nenhuma das categorias definidas",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique a declaração e corrija conforme necessário"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R296",
    "summary": "Respostas devem ter referência valida",
    "scope": "responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todas as respostas devem ter uma declaração com $ref válida",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as respostas possuem uma declaração com $ref válida"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R297",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R298",
    "summary": "Erro é diferente do idioma da API",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.examples.*",
    "field": "*",
    "check_text": "Todos os erros devem ser em português",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Traduzir todos os erros para o idioma da API"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Deve ser '#'",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "${parametros.idioma}",
    "field": "*",
    "check_text": "O parâmetro deve ser '#'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Defina o valor do parâmetro como '#'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R300",
    "summary": "Responses devem conter 201",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses",
    "field": "201",
    "check_text": "Todas as operações devem ter response 201",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.201 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R301",
    "summary": "Erro é diferente do idioma da API",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.*",
    "field": "*",
    "check_text": "Todos os erros devem ser em português ou idiomas da API",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use erros em português ou idiomas da API"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_302",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R303",
    "summary": "Erros devem ter métodos específicos ou não possuir payload",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Erros devem ter métodos específicos ou não possuir payload",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se erros estão com os métodos adequados ou sem payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "no response,  ad deve retornar HTTP Code '422'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Responses devem conter um código HTTP '422'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione uma resposta com status code 422"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R305",
    "summary": "O $ref deve ser declarado conforme a regra",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].$ref",
    "field": "$ref",
    "check_text": "O campo '$ref' deve ser declarado conforme a regra",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o $ref está sendo usado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R306",
    "summary": "Se método for PATCH, PUT ou POST, deve possuir payload",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Se o método for PATCH, PUT ou POST, deve possuir payload",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione um payload a operações que não possuem"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R307",
    "summary": "no response, retornar HTTP Code = 422 com poderá",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Em respostas, deve-se retornar HTTP Code = 422 quando não houver response definida.",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione uma resposta com statusCode=422 e description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R308",
    "summary": "$ref deve ser válido conforme regra",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].$ref",
    "field": "*",
    "check_text": "Todos os $refs devem ser válidos conforme regra",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o $ref está definido corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R309",
    "summary": "Nome de arquivos deve seguir o padrão",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os arquivos devem seguir um padrão específico",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o nome do arquivo segue o padrão 'nome_do_modulo-nome_da_funcionalidade.extensao'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "seErrorValida se o 'envelopamento da Responda apenas com JSON válido",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "seErrorValida se o 'envelopamento da Responda apenas com JSON válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a resposta está em formato JSON válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R311",
    "summary": "'situação de erro' deve estar em singular",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*].content.application/json.examples.*",
    "field": "*erro*",
    "value": "*erros*",
    "check_text": "'situação de erro' deve estar em singular",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use 'situação de erro' ao invés de 'situações de erro'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R312",
    "summary": "Idioma API é inglês",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os elementos da API devem estar em inglês",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os nomes de atributos, parâmetros e outros elementos estão em inglês"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R313",
    "summary": "Idioma API é inglês",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os recursos da API devem estar em inglês",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os nomes de atributos, parâmetros e outros campos estão em inglês"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R314",
    "summary": "Envolvimento padrão deve ser",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem seguir o padrão definido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as respostas estão no formato esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R315",
    "summary": "Idioma API deve ser em português",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].x-language",
    "field": "*",
    "check_text": "O idioma da API deve ser em português",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Defina o x-language como 'pt'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R316",
    "summary": "Envolvimento 'errors' deve obedecer",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.errors",
    "field": "*",
    "check_text": "Envolvimento 'errors' deve obedecer",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o envelopamento 'errors' está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R317",
    "summary": "A estrutura padrão da B3 deve ser seguida",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*]",
    "field": "*",
    "check_text": "Todos os servidores devem seguir a estrutura padrão da B3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o servidor está seguindo a estrutura padrão da B3"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R318",
    "summary": "Idioma API deve ser português",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].x-language",
    "field": "*",
    "check_text": "O idioma da API deve ser português",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o x-language é 'pt'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R319",
    "summary": "Padrão deve ser 'Erro'",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*error*",
    "value": "erros",
    "check_text": "Todas as operações devem ter o padrão 'Erro' em resposta de erro",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Atualize os nomes dos campos de erro para 'erros'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R320",
    "summary": "Idioma API deve ser português",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].language",
    "field": "*",
    "check_text": "O idioma da API deve ser português",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o idioma da API é 'pt-BR'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R321",
    "summary": "Envolvimento padrão deve ser 'erros'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem ter o envelopamento 'erros'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as respostas têm o envelopimento 'erros'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R322",
    "summary": "Idioma API deve ser português",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].x-language",
    "field": "*",
    "value": "pt",
    "check_text": "Idioma API deve ser português",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o x-language está definido como 'pt'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_323",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R324",
    "summary": "Objetos 'error' devem seguir a estrutura padrão da B3.A",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.errors",
    "field": "*",
    "check_text": "Todos os objetos 'error' devem seguir a estrutura padrão da B3.A",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o objeto 'error' segue a estrutura padrão da B3.A"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R325",
    "summary": "Nomes devem estar em inglês",
    "scope": "servers, paths, components, schema properties",
    "op": "OTHER",
    "selector": "$.*",
    "field": "*",
    "check_text": "Todos os nomes devem seguir o padrão inglês",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: investmentFundName em vez de fundoInvestimento"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R326",
    "summary": "Arquivos temporários ou parâmetros x-b3-idioma devem ser definidos",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*[?(@.name=='x-b3-idioma')]",
    "field": "*",
    "check_text": "Todas as operações devem ter parâmetro x-b3-idioma definido",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione um parâmetro x-b3-idioma com tipo string e exemplo de valores: 'pt-BR', 'en-US'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R327",
    "summary": "Nome de arquivos deve seguir o padrão",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os arquivos devem seguir um padrão específico",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o nome do arquivo segue o padrão estabelecido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R328",
    "summary": "Atributos e suas propriedades devem ser definidas",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todos os atributos e suas propriedades devem ser definidas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os atributos têm definições"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R329",
    "summary": "Existem características repetidas na classe",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Existem características repetidas na classe",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as propriedades têm definições consistentes"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R330",
    "summary": "Erros devem ser 'Error' ou 'Erro'",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*error*",
    "value": [
      "Error",
      "Erro"
    ],
    "check_text": "Todos os erros devem ser 'Error' ou 'Erro'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se todos os erros seguem o padrão"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R331",
    "summary": "Valida se os atributos da classe padrão",
    "scope": "schema",
    "op": "OTHER",
    "selector": "$.components.schemas.*",
    "field": "*",
    "check_text": "Todas as classes padrão devem ter atributos definidos corretamente",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos estão presentes e com definições corretas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "'Error' ou 'Erro' foram declarados como",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Error ou Erro foram declarados como",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Não use 'Error' ou 'Erro' para declarações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R333",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_334",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R335",
    "summary": "Business error code deve ser fornecido",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.errorCode",
    "field": "errorCode",
    "check_text": "Todas as respostas de erro devem conter um código de erro",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo 'errorCode' em todas as respostas de erro"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R336",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter a descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R337",
    "summary": "'title' deve conter o valor padrão 'Brief'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "title",
    "check_text": "'Todas as propriedades devem ter o título 'Brief'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os campos têm o título 'Brief'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R338",
    "summary": "Error message deve ter mensagem sucinta",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.message",
    "field": "*message*",
    "check_text": "Mensagens de erro devem ser curtas e clareiras",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: 'Campo inválido'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R339",
    "summary": "do erro de negócio deve ser um campo obrigatório",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.error",
    "field": "error",
    "check_text": "O campo 'error' deve ser obrigatório em todas as respostas de erro de negócio",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o campo 'error' em todos os erros de negócio"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R340",
    "summary": "Descrição do atributo 'detail' deve existir",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.*",
    "field": "detail",
    "check_text": "Todas as operações devem ter uma descrição para o atributo 'detail' em suas respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para o atributo 'detail' nas respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R341",
    "summary": "Respostas devem conter o valor padrão 'Complementary'",
    "scope": "responses",
    "op": "value_regex",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "pattern": "^#/components/schemas/.*$",
    "field": "*",
    "check_text": "Todas as respostas devem conter o valor padrão 'Complementary'",
    "severity": "error",
    "autofix": true,
    "value": "#/components/schemas/Complementary",
    "oas_version": null
  },
  {
    "rule_code": "R342",
    "summary": "Erros devem ter uma descrição",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.errors",
    "field": "*description*",
    "check_text": "Todos os erros devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada campo 'errors'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R343",
    "summary": "Respeito do erro de negócio.",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter resposta com erro de negócio bem definido.",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Defina uma resposta para erros de negócio com status 4xx ou 5xx e descrição adequada."
    ],
    "oas_version": null
  },
  {
    "rule_code": "R344",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R345",
    "summary": "'codigo' deve conter o valor padrão",
    "scope": "schema properties",
    "op": "value_regex",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*codigo*",
    "pattern": "^[a-zA-Z0-9]*$",
    "check_text": "'Codigo' deve conter apenas letras e números",
    "severity": "error",
    "autofix": true,
    "value": "[padrão]",
    "hints": [
      "Verifique se 'codigo' segue o padrão esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R346",
    "summary": "Código do erro de negócio.",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.errors[*]",
    "field": "*errorCode*",
    "check_text": "Códigos de erro de negócio devem ser consistentes e seguir um padrão definido.",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Defina um padrão para o código do erro de negócio"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R347",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R348",
    "summary": "'titulo' deve conter o valor padrão",
    "scope": "schema properties",
    "op": "value_regex",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*titulo*",
    "pattern": "^[a-zA-Z0-9]+$",
    "check_text": "'Titulo' deve conter apenas letras e números",
    "value": [
      "padrão"
    ],
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'titulo' segue o padrão"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Mensagem sucinta do erro de negócio",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths",
    "field": "/investment-fund",
    "value": "/investment-funds",
    "check_text": "Endpoints devem estar no plural",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R350",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R351",
    "summary": "'detalhe' deve conter o valor padrão",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.*",
    "field": "*detalhe*",
    "check_text": "'Detalhes' devem conter o valor padrão",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um valor padrão para 'detalhe' em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R352",
    "summary": "Respeito do erro de negócio.",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Erros de negócios devem ser tratados com respeito e precisão.",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as mensagens de erro estão claras e significativas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R353",
    "summary": "Atributo 'code' deve ser declarado",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].properties.*",
    "field": "*code*",
    "check_text": "'code' é um atributo obrigatório em todas as respostas",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione o atributo 'code' a todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R354",
    "summary": "Classe 'Error' deve ser obrigatória em todas as respostas",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "content.application/json.schema",
    "check_text": "Todas as operações devem ter a classe 'Error' obrigatória em todas as respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a classe 'Error' em todos os esquemas de resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R355",
    "summary": "Faltou declarar atributo 'codigo'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todas as respostas devem ter um código definido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione o atributo 'codigo' a todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R356",
    "summary": "Classe 'Erro' é obrigatória em todas as respostas",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "200, 400, 500",
    "check_text": "Todas as operações devem ter a classe 'Erro' em todas as respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a classe 'Erro' nas respostas 200, 400 e 500"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R357",
    "summary": "Faltou declarar atributo 'title' da classe",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*",
    "field": "*",
    "check_text": "Todas as classes devem ter o atributo 'title'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um atributo 'title' à classe"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R358",
    "summary": "Erro deve ser obrigatório em todas as respostas",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*error*",
    "check_text": "Todas as operações devem ter um campo 'erro' obrigatório em suas respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo 'erro' com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R359",
    "summary": "Faltou declarar atributo 'titulo' da classe",
    "scope": "schema+parameters+responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todas as classes devem ter um atributo 'titulo'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione o atributo 'titulo' à classe"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R360",
    "summary": "Erro deve ser obrigatório em todas as respostas",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "error",
    "check_text": "Todas as operações devem ter um campo 'error' obrigatório em suas respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo 'error' com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R361",
    "summary": "Atributo 'detail' deve ser declarado",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem ter o atributo 'detail'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um atributo 'detail' às respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R362",
    "summary": "Classe 'Error' deve ser obrigatória em todas as respostas",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "value": {
      "type": "object",
      "properties": {
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "required": [
        "error"
      ]
    },
    "check_text": "Todas as respostas devem conter um campo 'error' com o esquema definido",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione ou verifique se o campo 'error' está presente em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R363",
    "summary": "Atributo 'detalhe' deve ser declarado",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*detalhe*",
    "check_text": "Todas as respostas devem ter um atributo 'detalhe'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o atributo 'detalhe' à definição da resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R364",
    "summary": "Classe 'Erro' é obrigatória em todas as respostas",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "content.application/json.schema",
    "check_text": "Todas as operações devem ter a classe 'Erro' obrigatória em todas as respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a classe 'Erro' em todos os esquemas de resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R365",
    "summary": "Propriedade 'required' deve ser um array",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*required*",
    "check_text": "A propriedade 'required' deve ser um array",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'required' é um array"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R366",
    "summary": "Nome de arquivos deve seguir o padrão nomeArquivo.extensao",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*nomeArquivo*",
    "check_text": "Nomes de arquivos devem seguir o padrão nomeArquivo.extensao",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: documento.pdf"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R367",
    "summary": "Verifique se foi declarada alguma classe",
    "scope": "schema+parameters+responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os tipos devem ter uma declaração de classe",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os tipos estão declarados com a propriedade 'type'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R368",
    "summary": "Fora do envelopamento do 'data' não deve ocorrer",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem estar dentro do envelopamento 'data'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Certifique-se que todas as respostas estejam dentro do envelopamento 'data'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R369",
    "summary": "Declaração inválida de 'classe' fora do escopo permitido",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*classe*",
    "check_text": "A declaração de 'classe' não é permitida fora do escopo definido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o uso de 'classe' está correto no escopo atual"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R370",
    "summary": "'data' no payload do 'Response'. Toda classe deve ser envelopada pelo 'data' para garantir que exista",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "'data' deve existir no payload de todas as respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um 'data' ao schema de cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R371",
    "summary": "O payload do Response deve ser válido",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todos os payloads devem ser válidos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o payload segue a estrutura correta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R372",
    "summary": "Classe padrão Link não deve ser usada",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Classe padrão Link não deve ser usada em respostas",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use uma classe personalizada para a resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R373",
    "summary": "Responses devem conter status code 201 e 400",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "",
    "check_text": "Todas as operações devem ter responses com status code 201 e 400",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.201 e responses.400 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R374",
    "summary": "Classe 'Link' é válida apenas para o campo 'responses'",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "value": "Link",
    "check_text": "A classe 'Link' é válida apenas para o campo 'responses'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se a classe 'Link' está sendo usada corretamente em respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R375",
    "summary": "Excluir 'get' do método",
    "scope": "operations",
    "op": "update",
    "selector": "$.paths.*.*",
    "field": "*",
    "value": "",
    "check_text": "Exclua o método 'get' da declaração de operações",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os métodos estão declarados corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R376",
    "summary": "payload 'Response' a classe Link se Responda apenas com JSON válido.",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses.*",
    "field": "*",
    "check_text": "Todas as respostas devem ser JSON válidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a resposta é um objeto JSON válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R377",
    "summary": "Métodos devem ter classe padrão declarada",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Cada operação deve ter uma classe padrão declarada se o método for POST, PUT ou PATCH",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Declare a classe padrão para cada operação que use os métodos POST, PUT ou PATCH"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R378",
    "summary": "método deve ser get",
    "scope": "operations",
    "op": "update",
    "selector": "$.paths.*.*",
    "field": "*getError*",
    "value": "*get*",
    "check_text": "Todos os métodos devem ser get",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os métodos estão corretamente definidos"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R379",
    "summary": "Verifique se a classe padrão 'Link' foi definida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.get.responses[*]",
    "field": "Link",
    "check_text": "Todas as respostas de GET devem conter a classe padrão 'Link'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione a classe 'Link' nas respostas de GET"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R380",
    "summary": "Respostas devem conter description",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "description",
    "check_text": "Todas as respostas devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R381",
    "summary": "Respostas devem conter 200 quando o método é GET",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.GET.*",
    "field": "200",
    "check_text": "Quando o método for GET, as respostas devem conter 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R382",
    "summary": "No método 'get' é obrigatório a existência de uma resposta 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.GET.*",
    "field": "200",
    "check_text": "No método 'get' é obrigatório a existência de uma resposta 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R383",
    "summary": "Classe Link deve ser definida",
    "scope": "schema",
    "op": "ensure",
    "selector": "$.components.schemas.*",
    "field": "Link",
    "check_text": "Todas as classes devem conter a definição da classe Link",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a definição da classe 'Link'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R384",
    "summary": "No método 'get' é obrigatória a resposta",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*[?(@.methods=='get')].responses",
    "field": "*",
    "check_text": "No método 'get', é obrigatória a resposta",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma resposta para o método 'get'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R385",
    "summary": "Relacionamentos 'links' devem ser declarados",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].links",
    "field": "*",
    "check_text": "Todas as respostas devem ter relacionamentos 'links' declarados",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione links com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Response deve ser declarado",
    "scope": "responses",
    "op": "ensure",
    "selector": "*",
    "field": "response",
    "check_text": "Todas as operações devem ter response declarada",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione uma resposta para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R387",
    "summary": "Conformidade de classe obrigatória na resposta",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as classes devem ser obrigatórias na resposta",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as classes estão presentes nas respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R388",
    "summary": "Utilize método GET com $ref.Error em OAS2",
    "scope": "operations",
    "op": "update",
    "selector": "$.paths.*.*",
    "field": "*",
    "value": "{ \"methods\": [\"get\"] }",
    "check_text": "Todas as operações devem utilizar o método GET com $ref.Error em OAS2",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se todos os endpoints utilizam o método GET e possuem $ref.Error"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R389",
    "summary": "Propriedades 'type' devem estar no conjunto permitido",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "Propriedades 'type' devem estar no conjunto permitido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R390",
    "summary": "'maxLength' e 'description' dos campos devem existir",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter campos 'maxLength' e 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione maxLength e description em todos os campos de resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R391",
    "summary": "Atributos da classe 'Link' devem ser consistentes",
    "scope": "schema properties",
    "op": "uniform_all",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Atributos da classe 'Link' devem ser consistentes",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os atributos da classe 'Link' têm a mesma configuração"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R392",
    "summary": "Valida se o atributo da classe 'Link' foi definido",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.*",
    "field": "Link",
    "check_text": "Todas as classes devem ter o atributo 'Link' definido",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione o atributo 'Link' à classe"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R393",
    "summary": "Declarações devem ser feitas em conformidade com o idioma do documento",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].declarations",
    "field": "*",
    "check_text": "Todas as declarações devem ser feitas em conformidade com o idioma do documento",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as declarações estão no idioma correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R394",
    "summary": "Valida se a 'descrição' do atributo 'self'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.self",
    "field": "description",
    "check_text": "Todos os atributos devem ter descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para o atributo 'self'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R395",
    "summary": "Classe 'Link' está no padrão B3.",
    "scope": "OTHER",
    "op": "ensure",
    "selector": "*",
    "field": "class",
    "check_text": "Todos os elementos devem seguir o padrão B3 para a classe 'Link'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se a classe 'Link' está no padrão B3 em todos os elementos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R396",
    "summary": "Valida se a 'descrição' do atributo 'first' existe",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.first",
    "field": "description",
    "check_text": "Todos os atributos devem ter descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para o atributo 'first'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R397",
    "summary": "Classe 'Link' deve seguir o padrão B3",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].links[?(@.name=='Link')]",
    "field": "*",
    "check_text": "Classe 'Link' deve seguir o padrão B3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a classe 'Link' está no padrão B3"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R398",
    "summary": "Valida se a 'descrição' do atributo existe",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*description*",
    "check_text": "Todos os atributos devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada atributo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R399",
    "summary": "'primeira' - classe 'Link' está no padrão",
    "scope": "OTHER",
    "op": "ensure",
    "selector": "*",
    "field": "Link",
    "check_text": "'primeira' Link está no padrão",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o padrão do Link está correto em todos os locais"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Valida se a 'descrição' do atributo 'prev'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.prev",
    "field": "description",
    "check_text": "Todos os atributos devem ter descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para o atributo 'prev'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R401",
    "summary": "Classe 'Link' deve estar no padrão B3",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].links[*]",
    "field": "*",
    "check_text": "Todos os links devem seguir o padrão B3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os links estão no padrão B3"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R402",
    "summary": "Valida se a 'descrição' do atributo existe",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*description*",
    "check_text": "Todos os campos devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R403",
    "summary": "'anterior' - classe 'Link' está no padrão",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.properties.*",
    "field": "*",
    "check_text": "'anterior' - classe 'Link' deve seguir o padrão",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se as propriedades do esquema 'Link' estão no padrão esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R404",
    "summary": "Valida se a 'descrição' do atributo 'next' é fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.next",
    "field": "description",
    "check_text": "Todas as respostas devem ter uma descrição para o atributo 'next'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para o atributo 'next'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R405",
    "summary": "Classe 'Link' deve estar no padrão B3",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].links[*]",
    "field": "*",
    "check_text": "Todas as classes 'Link' devem seguir o padrão B3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a classe 'Link' está no padrão B3"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R406",
    "summary": "Valida se a 'descrição' do atributo existe",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*description*",
    "check_text": "Todos os campos devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R407",
    "summary": "proxima - classe 'Link' está no padrão",
    "scope": "OTHER",
    "op": "ensure",
    "selector": "*",
    "field": "Link",
    "check_text": "A classe 'Link' deve seguir o padrão definido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a classe 'Link' está no padrão esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Valida se a 'descrição' do atributo 'last'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*last*",
    "check_text": "Todos os campos que contenham 'last' devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para o campo 'last'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R409",
    "summary": "Classe 'Link' deve seguir o padrão B3",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].links[?(@.name=='Link')]",
    "field": "*",
    "check_text": "Classe 'Link' deve seguir o padrão B3",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a classe 'Link' segue o padrão B3"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R410",
    "summary": "Valida se a 'descrição' do atributo existe",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*description*",
    "check_text": "Todos os campos devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R411",
    "summary": "ultima - classe 'Link' está no padrão",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.*",
    "field": "*",
    "check_text": "Todas as instâncias da classe 'Link' devem seguir o padrão",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se todas as instâncias da classe 'Link' estão no padrão"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_412",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R413",
    "summary": "Atributos obrigatórios devem ser 'self' ou 'atual'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "value": [
      "self",
      "atual"
    ],
    "check_text": "Atributos obrigatórios devem ser 'self' ou 'atual'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se atributos obrigatórios seguem o padrão"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R414",
    "summary": "Propriedade 'required' deve ser única",
    "scope": "schema properties",
    "op": "unique",
    "selector": "$.components.schemas.*.properties[*].required",
    "field": "required",
    "check_text": "Cada propriedade 'required' deve ser única",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie propriedades 'required' duplicadas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R415",
    "summary": "Valida se a classe 'Link' possui a propriedade 'href'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.*",
    "field": "href",
    "check_text": "A classe 'Link' deve ter a propriedade 'href'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'href' à classe 'Link'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_416",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R417",
    "summary": "Verifique se o 'type' é igual a 'string'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*type*",
    "value": [
      "string"
    ],
    "check_text": "Verifique se o 'type' é igual a 'string'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R418",
    "summary": "Campos devem ter no máximo 2000 caracteres",
    "scope": "schema+parameters",
    "op": "length",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*.name",
    "field": "*",
    "value": {
      "max": 2000
    },
    "check_text": "Todos os campos devem ter no máximo 2000 caracteres",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se todos os campos estão dentro do limite de 2000 caracteres"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R419",
    "summary": "Atributos da classe 'Link' devem ser",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.Link.properties.*",
    "field": "*",
    "check_text": "Todos os atributos da classe 'Link' devem ser definidos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os atributos estão presentes"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R420",
    "summary": "Responses should contain 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses",
    "field": "200",
    "check_text": "All operations should have response 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Add responses.200 with description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R421",
    "summary": "Atributos da classe 'Link' devem seguir padrão",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.Link.properties.*",
    "field": "*",
    "check_text": "Atributos da classe 'Link' devem seguir padrão",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se os atributos estão no padrão esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R422",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R423",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R424",
    "summary": "'self' da classe 'Link' deve conter o campo 'url'",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.components.schemas.Link.properties.self",
    "field": "url",
    "check_text": "'self' da classe 'Link' deve conter o campo 'url'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo 'url' no objeto 'self'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R425",
    "summary": "Link to current page.",
    "scope": "OTHER",
    "op": "update",
    "selector": "*",
    "field": "/investment-fund",
    "value": "/investment-funds",
    "check_text": "Endpoints devem estar no plural",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R426",
    "summary": "Link para a página atual.",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].links[*]",
    "field": "*link_atual*",
    "check_text": "Todos os links devem apontar para a página atual",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o link aponta para a página atual"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R427",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R428",
    "summary": "'atual' da classe 'Link' deve conter o campo 'href'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.properties.*",
    "field": "*atual*",
    "check_text": "'atual' da classe 'Link' deve conter o campo 'href'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo 'href' na propriedade 'atual'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R429",
    "summary": "Links devem ter título",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].links[*]",
    "field": "*title*",
    "check_text": "Todos os links devem ter um título",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione um título aos links"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R430",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R431",
    "summary": "'first' da classe 'Link' deve conter o",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.Link.properties.first",
    "field": "first",
    "check_text": "'first' da classe 'Link' deve conter algum valor",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um valor para o campo 'first'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R432",
    "summary": "Links devem ter título",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].links[*]",
    "field": "*title*",
    "check_text": "Todos os links devem ter um título",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione um título aos links"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R433",
    "summary": "Primeira página deve ter atributo 'links' padrão",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[0]",
    "field": "links",
    "check_text": "A primeira página deve ter atributo 'links' padrão",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione links com propriedades 'first', 'prev', 'next', 'last'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R434",
    "summary": "Atributos da classe padrão devem ser em inglês ou português",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todos os atributos da classe padrão devem ser em inglês ou português",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use nomes de atributos sempre em inglês ou português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R435",
    "summary": "Declarações de idiomas devem seguir a regra",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].x-locale",
    "field": "*",
    "check_text": "Declarações de idiomas devem ser declaradas de acordo com a regra",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as declarações de idioma estão conforme a regra"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R436",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R437",
    "summary": "Nome de arquivos deve seguir o padrão",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os arquivos devem seguir um padrão específico",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o nome do arquivo segue o padrão 'nome_do_modulo-nome_da_funcionalidade.extensao'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R438",
    "summary": "Tipo API e Idioma devem ser válidos",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].variables.x-api-type, $.servers[*].variables.x-locale",
    "field": "*",
    "check_text": "Tipo API e Idioma devem ser válidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os valores de x-api-type e x-locale estão entre as opções permitidas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R439",
    "summary": "Nome do arquivo deve seguir o idioma",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].url",
    "field": "*",
    "check_text": "O nome do arquivo deve seguir o idioma",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o nome do arquivo segue o padrão 'idioma-Caminho_backend'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R440",
    "summary": "If file name contains 'english', language should be English",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].language",
    "field": "*",
    "check_text": "Se o nome do arquivo contém 'english', a linguagem deve ser inglês",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se a linguagem corresponde ao idioma no nome do arquivo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R441",
    "summary": "Descrições devem estar em português",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "Todas as descrições devem estar em português",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione uma tradução para a descrição"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R442",
    "summary": "Português ou inglês nos nomes de atributos",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].name",
    "field": "*",
    "check_text": "Nomes de atributos devem ser em português ou inglês",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use nomes de atributos sempre em português ou inglês"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R443",
    "summary": "Idioma no nome do arquivo deve ser em português",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].name",
    "field": "*",
    "check_text": "O nome do arquivo deve conter o idioma 'portugues'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Renomeie os arquivos com nomes em português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R444",
    "summary": "Descrições devem ser em português",
    "scope": "responses+operations+parameters+schema+servers",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todas as descrições devem estar somente no idioma português",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todas as descrições estão em português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R445",
    "summary": "Português deve ser usado em todos os campos textuais",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os campos textuais devem estar em português",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos textuais estão em português"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R446",
    "summary": "Propriedade 'description' do atributo é obrigatória",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades devem ter a descrição definida",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_447",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R448",
    "summary": "Link para a primeira ocorrência deve ser único",
    "scope": "responses",
    "op": "unique",
    "selector": "$.paths.*.*.responses[*].links[0].url",
    "field": "links[0].url",
    "check_text": "Cada resposta deve ter apenas uma ocorrência do link para a primeira",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie links duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R449",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R450",
    "summary": "'prev' da classe 'Link' deve conter o",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.Link.properties.prev",
    "field": "prev",
    "check_text": "'prev' da classe 'Link' deve conter o",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um valor válido para 'prev'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R451",
    "summary": "Link to previous page.",
    "scope": "OTHER",
    "op": "update",
    "selector": "*",
    "field": "*",
    "check_text": "Links para página anterior devem ser fornecidos",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione links para página anterior em todos os locais necessários"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R452",
    "summary": "Link para a página anterior.",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].links[0].url",
    "field": "*link_para_pagina_anterior*",
    "check_text": "O link para a página anterior deve ser fornecido em todas as respostas.",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione um link para a página anterior em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R453",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R454",
    "summary": "'anterior' da classe 'Link' deve conter o",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.Link.properties.*",
    "field": "*precedente*",
    "check_text": "'precedente' deve ser um campo obrigatório na classe 'Link'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione o campo 'precedente' à classe 'Link'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R455",
    "summary": "Links devem ter URL válida",
    "scope": "responses",
    "op": "value_regex",
    "selector": "$.paths.*.*.responses[*].links[*].url",
    "pattern": "^https://.*$",
    "field": "url",
    "check_text": "Links devem seguir o padrão URL válido",
    "severity": "error",
    "autofix": true,
    "value": "",
    "hints": [
      "Verifique se os links estão com URL válida"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R456",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter a descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R457",
    "summary": "'next' da classe 'Link' deve conter o campo 'href'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.properties.next",
    "field": "href",
    "check_text": "'next' da classe 'Link' deve conter o campo 'href'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo 'href' no objeto 'next'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R458",
    "summary": "Endpoints devem estar no plural",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths",
    "field": "/investment-fund",
    "check_text": "Endpoints devem estar no plural",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R459",
    "summary": "Respostas devem conter link para próxima página",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*nextPage*",
    "check_text": "Todas as operações devem ter link para próxima página",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com um campo 'nextPage'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R460",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_461",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R462",
    "summary": "Links devem seguir o padrão",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].links[*]",
    "field": "*",
    "check_text": "Todos os links devem seguir o padrão",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os links estão no formato correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R463",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R464",
    "summary": "'last' da classe 'Link' deve conter o campo 'href'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.properties.*",
    "field": "last",
    "check_text": "'last' da classe 'Link' deve conter o campo 'href'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo 'href' a propriedade 'last'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R465",
    "summary": "Links devem ter texto padrão",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*].content.application/json.links[*]",
    "field": "*text*",
    "value": [
      "Link to last page."
    ],
    "check_text": "Links devem ter texto padrão 'Link to last page.'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se os links estão com o texto correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R466",
    "summary": "Last page should have a link to the next page",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.get._last_page.",
    "field": "links.next",
    "check_text": "The last page should have a link to the next page",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Add a 'next' link in the 'links' field"
    ],
    "value": {
      "url": "http://Caminho_backend/api/pages/v2/{pageNumber}"
    },
    "oas_version": null
  },
  {
    "rule_code": "R467",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R468",
    "summary": "'last' da classe 'Link' deve conter o",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.Link.properties.last",
    "field": "last",
    "check_text": "'last' da classe 'Link' deve conter o",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um valor válido para a propriedade 'last'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R469",
    "summary": "Respostas devem conter link para a última página.",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "last_page_link",
    "check_text": "Todas as operações devem ter link para a última página.",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione last_page_link com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R470",
    "summary": "Declare o atributo 'self' na classe 'Link'",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.Link.properties.*",
    "field": "self",
    "value": "string",
    "check_text": "Declare o atributo 'self' na classe 'Link'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o atributo 'self' com tipo string"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R471",
    "summary": "Não deve haver campos obrigatórios sem especificação",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].required",
    "field": "*",
    "check_text": "Todas as respostas devem especificar se os campos são obrigatórios ou não",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione 'required': false para todos os campos opcionais"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R472",
    "summary": "Declare o atributo 'atual' na classe",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Declare o atributo 'atual' na classe",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione um campo 'atual' para indicar se o registro é atual"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_473",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R474",
    "summary": "Classe 'Link' deve possuir atributo 'href'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.Link.*",
    "field": "href",
    "check_text": "Todas as instâncias da classe 'Link' devem possuir o atributo 'href'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o atributo 'href' a todas as instâncias da classe 'Link'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R475",
    "summary": "Classe 'Meta' deve ser declarada",
    "scope": "schema",
    "op": "ensure",
    "selector": "$.components.schemas.*",
    "field": "Meta",
    "check_text": "Todas as classes devem conter a classe 'Meta'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a classe 'Meta' em todas as classes"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R476",
    "summary": "Métodos devem ser especificados corretamente",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Todas as operações devem ter método especificado corretamente",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os métodos estão sendo usados corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R477",
    "summary": "Classe 'Meta' inválida",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*meta*",
    "check_text": "A classe 'Meta' não é válida para o esquema OpenAPI",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Remova a propriedade 'meta' ou defina um tipo válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R478",
    "summary": "método 'delete' deve ser exclusivo",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "methods",
    "check_text": "Cada operação deve ter apenas um método 'delete'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se não há mais de uma operação com método 'delete'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R479",
    "summary": "Classe do payload 'Response' deve ser válida",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths..../*/responses/*",
    "field": "*",
    "check_text": "A classe do payload 'Response' deve ser válida",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a classe do payload 'Response' está definida corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R480",
    "summary": "entoMetaValida se foram declarados os",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter entoMeta declarada",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as operações possuem entoMeta declarado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R481",
    "summary": "Parâmetros opcionais devem ser definidos como nullable",
    "scope": "parameters",
    "op": "update",
    "selector": "$.paths.*.*.parameters[*].required",
    "field": "*page* ou *",
    "value": false,
    "check_text": "Parâmetros opcionais devem ser definidos como nullable",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Defina required=false para parâmetros opcionais"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R482",
    "summary": "Parâmetro deve ser chamado de 'page' ou 'tamanho-pagina'",
    "scope": "parameters",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "name",
    "check_text": "Parâmetro deve ser chamado de 'page' ou 'tamanho-pagina'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use 'page' ou 'tamanho-pagina' para o parâmetro"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R483",
    "summary": "Parâmetros de query devem estar em upperCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.queryParameters[*].name",
    "pattern": "^[A-Z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Parâmetros de query devem seguir upperCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: InvestmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R484",
    "summary": "Padrão 'Meta' para o método 'get'",
    "scope": "operations",
    "op": "update",
    "selector": "$.paths..GET.responses[*]",
    "field": "*meta*",
    "value": "*meta_get*",
    "check_text": "O padrão 'Meta' deve ser usado apenas no método 'get'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use o nome 'meta_get' para os campos 'meta' nos endpoints que utilizam o método 'get'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R485",
    "summary": "Valida se foi declarada a classe padrão",
    "scope": "servers",
    "op": "ensure",
    "selector": "$.servers[*].extensions.x-openapi-server-type",
    "field": "*",
    "check_text": "Todos os servidores devem ter a classe padrão declarada",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a classe padrão ao seu servidor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R486",
    "summary": "Meta deve existir no relacionamento",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].meta",
    "field": "*",
    "check_text": "Todas as respostas devem conter um campo 'meta'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o campo 'meta' em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_487",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R488",
    "summary": "Respostas de métodos GET em relação a meta devem conter 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths['/meta'].get.responses",
    "field": "200",
    "check_text": "Respostas de métodos GET em relação a meta devem conter response 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R489",
    "summary": "Parâmetro deve ser definido",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os parâmetros devem ser definidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione definição para todos os parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R490",
    "summary": "query deve ser único",
    "scope": "parameters",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "query",
    "check_text": "Cada operação deve ter query única",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie queries duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R491",
    "summary": "Responses should contain 200",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses",
    "field": "200",
    "check_text": "All operations should have response 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Add responses.200 with description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R492",
    "summary": "Respostas de métodos GET devem conter meta",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths['/']['get']['responses']",
    "field": "meta",
    "check_text": "Respostas de métodos GET devem conter meta",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma propriedade 'meta' em respostas de métodos GET"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R493",
    "summary": "Parâmetros devem ser declarados",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os parâmetros devem ser declarados",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Declare todos os parâmetros necessários"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R494",
    "summary": "query deve ser em lowerCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*[?].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Nomes de queries devem seguir lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: page e size"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R495",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Descrição é obrigatória em todas as operações",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R496",
    "summary": "Valida se o relacionamento 'meta' é válido",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*meta*",
    "check_text": "Verifique se o relacionamento 'meta' é válido",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o relacionamento 'meta' segue as regras definidas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R497",
    "summary": "Classe 'Meta' deve ser declarada",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].extensions.x-kong-response-format",
    "field": "*",
    "check_text": "Classe 'Meta' deve ser declarada em todos os servidores",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione a classe 'Meta' nas definições dos servidores"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R498",
    "summary": "Parâmetros opcionais devem ter o atributo 'optional' definido como true",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*].required",
    "field": "*",
    "check_text": "Todos os parâmetros opcionais devem ter o atributo 'optional' definido como true",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Defina 'required': false para parâmetros opcionais"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R499",
    "summary": "page e page-size devem ser consistentes",
    "scope": "parameters",
    "op": "uniform_all",
    "selector": "$.paths.*.parameters[*].name",
    "field": "*",
    "check_text": "Se um endpoint usar 'page', então deve usar 'page-size' e vice-versa",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use sempre 'page' ou 'page-size' em conjunto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "tamanho-pagina deve ser um número inteiro positivo",
    "scope": "parameters",
    "op": "length",
    "selector": "$.paths.*.queryParameters[*].name",
    "field": "*tamanho-pagina*",
    "value": {
      "min": 1,
      "type": "integer",
      "max": 2147483647
    },
    "check_text": "O campo 'tamanho-pagina' deve ser um número inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'tamanho-pagina' é um número inteiro positivo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R501",
    "summary": "Respostas devem conter status code 200 quando o método é GET",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*/*[?methods=get].responses",
    "field": "200",
    "check_text": "Quando o método for GET, as respostas devem conter status code 200",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione responses.200 com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R502",
    "summary": "Faltou declarar a classe 'Meta'",
    "scope": "servers",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "É necessário declarar a classe 'Meta' em todos os servidores",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione a classe 'Meta' em todos os servidores"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R503",
    "summary": "a existência dos parametros query:",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.queryParameters[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter parâmetros query definidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as operações possuem parâmetros query definidos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R504",
    "summary": "'pagina e tamanho-pagina' e Método devem ser únicos",
    "scope": "parameters+operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": [
      "pagina",
      "tamanho-pagina"
    ],
    "check_text": "'pagina' e 'tamanho-pagina' devem ser únicos em diferentes operações",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie parâmetros duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R505",
    "summary": "Propriedades 'type' devem estar no conjunto permitido",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "Propriedades 'type' devem estar no conjunto permitido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R506",
    "summary": "Campos minimum, maximum e description devem existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*minimum*|*maximum*|*description*",
    "check_text": "Todos os campos devem conter minimum, maximum e description",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione minimum, maximum e description em todos os campos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R507",
    "summary": "Atributos da classe 'Meta' devem ser consistentes",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties['Meta']",
    "field": "*",
    "check_text": "Atributos da classe 'Meta' devem ser consistentes entre si",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os atributos da classe 'Meta' seguem o mesmo padrão"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R508",
    "summary": "Valida se o atributo da classe 'Meta' foi definido",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*meta*",
    "field": "*meta*",
    "check_text": "Todas as classes devem ter um atributo 'Meta'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o atributo 'Meta' à classe"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R509",
    "summary": "Declaração deve ser feita em português",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].description",
    "field": "*",
    "check_text": "Todas as declarações devem estar em português",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a descrição está em português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R510",
    "summary": "A classe 'Meta' deve conter o atributo especificado",
    "scope": "schema",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "<atributo>",
    "check_text": "A classe 'Meta' deve conter o atributo especificado",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o atributo '<atributo>' à classe 'Meta'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R511",
    "summary": "Verifique se o 'type' está definido",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*type*",
    "check_text": "Todas as propriedades devem ter o atributo 'type' definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o tipo para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R512",
    "summary": "Tipo deve ser inteiro e possuir um valor mínimo de -2147483648",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "integer"
    ],
    "check_text": "Tipos devem ser inteiros e possuir um valor mínimo de -2147483648",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R513",
    "summary": "O valor máximo deve ser menor ou igual a 2147483647",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*maximum*",
    "value": {
      "max": 2147483647
    },
    "check_text": "O valor máximo deve ser menor ou igual a 2147483647",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se 'maximum' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R514",
    "summary": "Responses devem conter description",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "description",
    "check_text": "Todas as operações devem ter descrição nas respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada response"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R515",
    "summary": "Atributos da classe 'Meta' devem seguir um padrão específico",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties['Meta']",
    "field": "*",
    "check_text": "Atributos da classe 'Meta' devem seguir um padrão específico",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os atributos da classe 'Meta' estão no formato esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R516",
    "summary": "operationId deve ser em inglês",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "operationId",
    "check_text": "Cada operação deve ter operationId em inglês",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie operationIds não em inglês"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R517",
    "summary": "Atributos da classe 'Meta' devem seguir um padrão específico",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*meta*",
    "check_text": "Atributos da classe 'Meta' devem seguir um padrão específico",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o atributo 'meta' segue o padrão desejado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R518",
    "summary": "Todos os endpoints devem estar no plural",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths.*",
    "field": "*",
    "check_text": "Endpoints devem estar no plural",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R519",
    "summary": "Conforme idioma da API",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os campos devem seguir o idioma definido pela API",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos estão no idioma definido na API"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R520",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todos os atributos devem ter a propriedade 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada atributo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R521",
    "summary": "'totalRegistros' da classe 'Meta' deve ser um número inteiro positivo",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.Meta.properties.totalRegistros",
    "field": "totalRegistros",
    "value": {
      "min": 1,
      "max": null
    },
    "check_text": "'totalRegistros' deve ser um número inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'totalRegistros' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Responda apenas com JSON válido",
    "scope": "responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Respondas devem conter o valor padrão 'Número total de'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as respostas contêm o valor padrão 'Número total de'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R523",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todos os atributos devem ter a propriedade 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada atributo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R524",
    "summary": "'totalRecords' da classe 'Meta' deve ser um número inteiro positivo",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.Meta.properties.totalRecords",
    "field": "totalRecords",
    "value": {
      "min": 1,
      "type": "integer"
    },
    "check_text": "'totalRecords' deve ser um número inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'totalRecords' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "conter o valor padrao 'Total number of'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Responda apenas com JSON válido.",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Atualize o valor padrão 'Total number of' para algo diferente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R526",
    "summary": "records ou Número total de registros.",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "Descrições devem ser consistentes em relação a 'records' ou 'Número total de registros'.",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se as descrições estão corretas."
    ],
    "oas_version": null
  },
  {
    "rule_code": "R527",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todos os atributos devem ter a propriedade 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada atributo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R528",
    "summary": "'totalPaginas' da classe 'Meta' deve ser um número inteiro positivo",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.Meta.properties.*",
    "field": "totalPaginas",
    "value": {
      "min": 1,
      "type": "integer"
    },
    "check_text": "'totalPaginas' deve ser um número inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'totalPaginas' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "conter o valor padrao 'Número total de",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Responda apenas com JSON válido.",
    "severity": "error",
    "autofix": false,
    "hints": [],
    "oas_version": null
  },
  {
    "rule_code": "R530",
    "summary": "A propriedade 'description' do atributo deve existir",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R531",
    "summary": "'totalPages' da classe 'Meta' deve ser um número inteiro positivo",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.Meta.properties.*",
    "field": "totalPages",
    "value": {
      "min": 1,
      "type": "integer"
    },
    "check_text": "'totalPages' deve ser um número inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'totalPages' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "conter o valor padrao 'Total number of'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Responses devem conter o valor padrão 'Total number of'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Atualize o valor padrão 'Total number of' para algo diferente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R533",
    "summary": "pages e Número total de páginas devem ser únicos",
    "scope": "responses",
    "op": "unique",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.*",
    "field": [
      "pages",
      "totalPages"
    ],
    "check_text": "Cada resposta deve ter campos 'pages' e 'totalPages' únicos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie campos duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R534",
    "summary": "Declare o atributo 'totalPages'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "totalPages",
    "check_text": "Todas as operações devem ter o atributo 'totalPages'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione totalPages com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R535",
    "summary": "'totalRecords' da classe 'Meta' deve ser um número inteiro",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.Meta.properties.*",
    "field": "totalRecords",
    "value": {
      "type": "integer"
    },
    "check_text": "'totalRecords' deve ser um número inteiro",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'totalRecords' é do tipo inteiro"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R536",
    "summary": "Campos obrigatórios devem ser marcados como required",
    "scope": "schema+parameters",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todos os campos obrigatórios devem ser marcados como required",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione 'required': true aos campos obrigatórios"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R537",
    "summary": "Declare o atributo 'totalPaginas'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "totalPaginas",
    "check_text": "Todas as operações devem ter um atributo 'totalPaginas'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione totalPaginas com description"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R538",
    "summary": "'totalRegistros' deve ser um número inteiro positivo",
    "scope": "responses",
    "op": "length",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$refs.*",
    "field": "*totalRegistros*",
    "value": {
      "min": 1,
      "max": null
    },
    "check_text": "'totalRegistros' deve ser um número inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'totalRegistros' é um número inteiro positivo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R539",
    "summary": "Campos obrigatórios devem ser marcados como required",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todos os campos obrigatórios devem ser marcados como required",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione 'required': true em todos os campos obrigatórios"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R540",
    "summary": "Parâmetros de entrada devem ser declarados",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Todos os endpoints devem ter parâmetros de entrada declarados",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione parâmetros de entrada aos endpoints"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R541",
    "summary": "Parâmetros opcionais devem estar em lowerCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[?(@.required==false)].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Parâmetros opcionais devem seguir lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R542",
    "summary": "Métodos devem ser POST, PUT ou PATCH na classe padrão no Meta",
    "scope": "operations",
    "op": "update",
    "selector": "$.paths.*.*",
    "field": "*",
    "value": [
      "post",
      "put",
      "patch"
    ],
    "check_text": "Todos os métodos devem ser POST, PUT ou PATCH na classe padrão no Meta",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o método está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R543",
    "summary": "Parâmetros de entrada do tipo 'query' ou atributos devem seguir lowerCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Parâmetros de entrada do tipo 'query' ou atributos devem seguir lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R544",
    "summary": "no payload do Request, representados  abaixo, padrões",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.in_body.parameters[*]",
    "field": "*",
    "check_text": "no payload do Request deve seguir os padrões definidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o payload segue os padrões definidos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R545",
    "summary": "Parâmetros devem poder ser declarados como opcionais ou obrigatórios",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*]",
    "field": "*",
    "check_text": "Parâmetros devem poder ser declarados como opcionais ou obrigatórios",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se os parâmetros podem ser declarados como opcionais ou obrigatórios"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R546",
    "summary": "Atributos Classe Padrão Meta devem ser obrigatórios",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*meta*",
    "check_text": "Todos os atributos devem conter um campo 'meta' obrigatório",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o campo 'meta' em todos os atributos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_547",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R548",
    "summary": "Declarações de idiomas devem seguir a regra",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].x-locale",
    "field": "*",
    "check_text": "Declarações de idiomas devem ser feitas de acordo com a regra",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as declarações de idioma estão conforme a regra"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R549",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R550",
    "summary": "Nome de arquivos deve seguir o padrão",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os arquivos devem seguir um padrão específico",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o nome do arquivo segue o padrão 'nome_do_modulo-nome_da_funcionalidade.extensao'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R551",
    "summary": "Tipo API e Idioma devem ser válidos",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].apiType, $.servers[*].language",
    "field": "*",
    "check_text": "Tipo API e Idioma devem ser válidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os valores de 'apiType' e 'language' estão entre as opções permitidas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R552",
    "summary": "Nome do arquivo deve seguir o idioma",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].url",
    "field": "*",
    "check_text": "O nome do arquivo deve seguir o idioma",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o nome do arquivo segue a convenção de nomenclatura para o idioma"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R553",
    "summary": "Se Idioma no nome do arquivo for inglês, deve haver tradução para português",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].description.x-translatable",
    "field": "*",
    "check_text": "Se o idioma no nome do arquivo for inglês, deve haver uma tradução para português",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Traduza a descrição em português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Considerar as descrições no idioma português",
    "scope": "responses",
    "op": "OTHER",
    "selector": "*",
    "field": "*description*",
    "check_text": "Descrições devem estar em português",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Utilize descrições em português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R555",
    "summary": "English responses should be in plural form",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "value": "",
    "check_text": "Responses em inglês devem estar no plural",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: Responses should be in plural form"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R556",
    "summary": "parâmetros e atributos da classe Meta (page) devem seguir o padrão",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.Meta.properties[*]",
    "field": "*",
    "check_text": "Parâmetros e atributos da classe Meta (page) devem seguir o padrão",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se os nomes dos parâmetros e atributos estão em lowerCamelCase"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R558",
    "summary": "Descrições somente no idioma",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*",
    "check_text": "As descrições devem ser apenas no idioma",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use descrições somente em português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R559",
    "summary": "Português deve ser usado nos nomes de recursos",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "value": "",
    "check_text": "Nomes de recursos devem ser em português",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use nomes de recursos sempre em português"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R560",
    "summary": "Parâmetros devem seguir o padrão lowerCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*parameters[*].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Parâmetros devem seguir o padrão lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: page e size-page"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R561",
    "summary": "Propriedades 'type' devem estar no conjunto permitido",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "Propriedades 'type' devem estar no conjunto permitido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R562",
    "summary": "Valores devem ser números flutuantes",
    "scope": "schema properties",
    "op": "value_regex",
    "selector": "$.components.schemas.*.properties.*",
    "pattern": "^\\d+(\\.\\d{1,2})?$",
    "field": "*",
    "check_text": "Valores devem ser números flutuantes",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: 123.45"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R563",
    "summary": "pagina foram declarados de acordo",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*pagina*",
    "check_text": "Não é permitido declarar 'pagina' em nenhum campo",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use 'page' ao invés de 'pagina'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R564",
    "summary": "'pagina' deve existir como parâmetro",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "parameters[?(@.name=='pagina')]",
    "check_text": "'pagina' deve existir como parâmetro em todas as operações",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o parâmetro 'pagina' aos endpoints que não possuem"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R565",
    "summary": "'minimum' deve ser 1",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*minimum*",
    "value": {
      "min": 1,
      "max": 1
    },
    "check_text": "'minimum' deve ser sempre 1",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina minLength=1 e maxLength=1"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R566",
    "summary": "'description' deve ser 'Número da conta'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "*description*",
    "check_text": "'description' deve ser 'Número da conta'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione 'Número da conta' como description em todas as operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R567",
    "summary": "Página que está sendo requisitada deve seguir o padrão /{nomeDoRecurso}",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "value": "",
    "check_text": "As páginas devem seguir o padrão /{nomeDoRecurso}",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Use nomes de recursos sempre no plural"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R568",
    "summary": "Valor da primeira página deve ser 1",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.get.responses[*]",
    "field": "pageNumber",
    "check_text": "O valor da primeira página deve ser 1",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o valor inicial é 1"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R569",
    "summary": "O atributo 'pagina' não está no padrão",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].properties.*",
    "field": "*pagina*",
    "check_text": "O atributo 'pagina' não está no padrão esperado",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o atributo 'pagina' segue o padrão esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R570",
    "summary": "'minimum' deve ser 1 'description' deve ter valor mínimo 1",
    "scope": "responses",
    "op": "length",
    "selector": "$.paths.*.*.responses[*].properties.minimum",
    "field": "*minimum*",
    "value": {
      "min": 1,
      "max": null
    },
    "check_text": "'minimum' deve ter valor mínimo 1 em todas as descrições",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina um valor mínimo de 1 para 'minimum' em todas as descrições"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R571",
    "summary": "Número da página deve ser um inteiro positivo",
    "scope": "responses",
    "op": "length",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*pageNumber*",
    "value": {
      "min": 1,
      "max": null
    },
    "check_text": "Número da página deve ser um inteiro positivo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina minLength=1 e maxLength=null"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R572",
    "summary": "Primeira página deve ter o valor 'requisitado'",
    "scope": "responses",
    "op": "value_regex",
    "selector": "$.paths.*.get.responses[*].content.application/json.examples.*",
    "pattern": "^\\{.*\\}$",
    "field": "*",
    "check_text": "A primeira página deve ter o valor 'requisitado'",
    "severity": "error",
    "autofix": true,
    "value": "{ \"data\": \"requisitado\" }",
    "hints": [
      "Verifique se a primeira página está correta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R573",
    "summary": "'tamanho-pagina' deve estar presente",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "parameters[?(@.name=='tamanho-pagina')].name",
    "check_text": "'Todas as operações devem ter o parâmetro 'tamanho-pagina'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o parâmetro 'tamanho-pagina' a todas as operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R574",
    "summary": "'minimum' deve ser 1",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*minimum*",
    "value": {
      "min": 1,
      "max": null
    },
    "check_text": "'minimum' deve ser 1 em todos os campos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina minLength=1 para todos os campos que contenham 'minimum'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R575",
    "summary": "'description' deve ser 'Quantidade total'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].description",
    "field": "description",
    "check_text": "'Todas as operações devem ter description igual a Quantidade total'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione 'Quantidade total' como description em todas as operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R576",
    "summary": "Registros por página devem ser definidos",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*pagination*",
    "check_text": "Todas as operações devem ter definição de registros por página",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma definição para 'pagination' em schema.json"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R577",
    "summary": "ParametroPadrao.properties Os parâmetros 'page' e 'page-size' devem seguir o mesmo padrão",
    "scope": "parameters",
    "op": "uniform_all",
    "selector": "$.paths.*.parameters[*].name",
    "field": "*page* ou *page-size*",
    "check_text": "Os parâmetros 'page' e 'page-size' devem seguir o mesmo padrão",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: page e pageSize devem ter sempre {type=number}"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R578",
    "summary": "Páginas devem ser declaradas com os métodos GET",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "value": "methods=['get']",
    "check_text": "Páginas devem ser declaradas com os métodos GET",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Verifique se as páginas estão sendo declaradas corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R579",
    "summary": "post, put e patch em conjunto com a classe Meta devem ser únicos",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "operationId",
    "check_text": "Cada operação deve ter operationId único quando usado em conjunto com post, put e patch",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie operationIds duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R580",
    "summary": "Atributos 'page' e 'page-size' devem ter definição uniforme",
    "scope": "schema+parameters",
    "op": "update",
    "selector": "$.components.schemas.*.properties, $.components.parameters[*].name",
    "field": [
      "page",
      "page-size"
    ],
    "value": {
      "page": {
        "type": "number"
      },
      "page-size": {
        "type": "number"
      }
    },
    "check_text": "Atributos 'page' e 'page-size' devem ter o mesmo tipo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se os atributos 'page' e 'page-size' têm a mesma definição"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R581",
    "summary": "Payload deve conter métodos específicos",
    "scope": "paths",
    "op": "OTHER",
    "selector": "$.paths.*.post",
    "field": "*",
    "check_text": "Payloads devem conter os métodos especificados",
    "severity": "warning",
    "autofix": false,
    "methods": [
      "get",
      "post"
    ],
    "hints": [
      "Adicione os métodos GET e DELETE no payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R582",
    "summary": "(post, put e patch) em conjunto com a classe Meta devem ter statusCode 200",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*[*].x-ms-operation]",
    "field": "*statusCode*",
    "check_text": "Todas as operações devem ter statusCode 200 quando a classe Meta for utilizada",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione statusCode 200 nas operações que utilizam a classe Meta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R583",
    "summary": "PaginaçãoError deve conter description",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*[*].responses.PaginaçãoError",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição para a resposta PaginaçãoError",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione description à resposta PaginaçãoError"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R584",
    "summary": "Propriedade 'description' deve ser definida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição para suas respostas",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R585",
    "summary": "Atributos ou parâmetros devem estar no singular",
    "scope": "schema+parameters",
    "op": "update",
    "selector": "$.components.schemas.*.properties[*].name",
    "field": "*",
    "value": "*singular*",
    "check_text": "Atributos ou parâmetros devem estar no singular",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName deve ser investmentFund"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R586",
    "summary": "Parâmetros devem seguir camelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-z][A-Za-z0-9]*$",
    "field": "name",
    "check_text": "Parâmetros devem seguir camelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R587",
    "summary": "Propriedade 'description' é obrigatória",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "description",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R588",
    "summary": "Todos os atributos devem ter um tipo definido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todos os atributos devem ter um tipo definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os atributos têm um tipo definido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R589",
    "summary": "Payload deve conter exatamente 3 campos",
    "scope": "parameters",
    "op": "length",
    "selector": "$.requestBody.content.*.schema.properties.*",
    "field": "*",
    "value": {
      "min": 3,
      "max": 3
    },
    "check_text": "Payload deve conter exatamente 3 campos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o payload possui exatamente 3 campos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R590",
    "summary": "Propriedade 'description' é obrigatória",
    "scope": "schema+parameters+responses+operations",
    "op": "ensure",
    "selector": "$.*",
    "field": "*description*",
    "check_text": "Todas as propriedades devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R591",
    "summary": "Todos os atributos devem ter um tipo definido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os atributos devem ter um tipo definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os atributos têm um tipo definido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R392",
    "summary": "Payload deve conter exatamente um campo 'data'",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$refs",
    "field": "data",
    "check_text": "Todas as respostas devem conter um campo 'data'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o campo 'data' ao payload"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R593",
    "summary": "Propriedade 'description' é obrigatória",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "description",
    "check_text": "Todas as operações devem ter descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R594",
    "summary": "Todos os parâmetros devem seguir o padrão lowerCamelCase",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Todos os parâmetros devem seguir o padrão lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Propriedade 'description' é obrigatória em query e header",
    "scope": "parameters+responses",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*].description, $.paths.*.*.responses[*].description",
    "field": "*description*",
    "check_text": "Todas as propriedades de query e header devem ter a descrição definida",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Responses devem conter description",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "description",
    "check_text": "Todas as operações devem ter descrição para suas respostas",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada response"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R597",
    "summary": "Todo parâmetro deve ser definido corretamente",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*]",
    "field": "*",
    "check_text": "Todos os parâmetros devem ser definidos corretamente",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os parâmetros estão com definições válidas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R598",
    "summary": "Todo atributo pertencente a uma classe declarada em deve ter definição uniforme",
    "scope": "schema+properties",
    "op": "uniform_all",
    "selector": "$.components.schemas.*",
    "field": "*",
    "check_text": "Atributos de uma classe declarada em devem ter definição uniforme",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre {type=string, maxLength=14}"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R599",
    "summary": "Todo atributo pertencente a classe não declarada",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os atributos devem pertencer a uma classe declarada",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as classes estão declaradas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "invalido-json-B3Valida",
    "summary": "Se um atributo (body) ou parâmetro fornecido não é válido JSON",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os atributos (body) e parâmetros devem ser válidos JSON",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos (body) e parâmetros são válidos JSON"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R601",
    "summary": "Parâmetro segue a regra de",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*]",
    "field": "*",
    "check_text": "Todos os parâmetros devem seguir uma regra específica",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique a documentação para saber qual é a regra que o parâmetro deve seguir"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R602",
    "summary": "A propriedade 'name' do 'atributo' deve seguir o padrão lowerCamelCase",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties[*].name",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "name",
    "check_text": "Propriedades devem seguir o padrão lowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R603",
    "summary": "Parâmetro deve seguir formatação correta",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*]",
    "field": "*",
    "check_text": "Todos os parâmetros devem seguir uma formatação correta",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o formato do parâmetro está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R604",
    "summary": "Nomes devem seguir o padrão LowerCamelCase",
    "scope": "paths+servers",
    "op": "regex",
    "selector": "$.paths.*.*|$.servers[*].url",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "*",
    "check_text": "Nomes devem seguir o padrão LowerCamelCase",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R605",
    "summary": "Case, exceto o primeiro termo",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem seguir o padrão 'Case: value' exceto no primeiro termo",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: '400: Bad Request', '200: OK'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R606",
    "summary": "Todo minúsculo. Formatação do parâmetro, ( , ), e name pathqueryatrib",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-z]+$",
    "field": "name",
    "check_text": "Todos os parâmetros devem ser minúsculos e seguir a formatação do ( , )",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R607",
    "summary": "Deve seguir o padrão Lower Camel Case",
    "scope": "paths+parameters+schema properties",
    "op": "regex",
    "selector": "$.paths[*].*.name, $.parameters[*].name, $.components.schemas.*.properties.*",
    "pattern": "^[a-z][a-zA-Z0-9]*$",
    "field": "*",
    "check_text": "Todos os nomes devem seguir o padrão Lower Camel Case",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_608",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R609",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Descrição é obrigatória em todas as operações",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R610",
    "summary": "Erro OAS2 deve ser resolvido",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].error",
    "field": "*",
    "check_text": "Todos os servidores devem ter erro OAS2 resolvido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Revise e corrija todos os erros OAS2"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R_FAIL_611",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R612",
    "summary": "Parâmetros devem ter a propriedade 'type'",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*]",
    "field": "type",
    "check_text": "Todos os parâmetros devem ter a propriedade 'type'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'type' em todos os parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R613",
    "summary": "Todas as respostas devem ter statusCode",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "statusCode",
    "check_text": "Todas as operações devem ter statusCode definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione statusCode a todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R614",
    "summary": "Todo atributo ou parâmetro deve ter",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todo atributo ou parâmetro deve ter definido um tipo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os atributos e parâmetros têm o tipo definido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R615",
    "summary": "A propriedade 'type' declarada deve ser preenchida com os tipos permitidos",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "A propriedade 'type' deve ser preenchida com os tipos permitidos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R616",
    "summary": "Parâmetros e type são obrigatórios",
    "scope": "parameters+schema properties",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*].type, $.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os parâmetros e tipos devem ser obrigatórios",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todos os parâmetros e tipos estão definidos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Erro no atributo 'body'",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.post",
    "field": "*",
    "check_text": "Houve um erro no atributo 'body' das operações POST",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o atributo 'body' está definido corretamente"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "",
    "summary": "StringValida se o atributo (body) ou",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Verifique se o conteúdo do atributo (body) é uma string válida",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Verifique se o tipo de dado é string e se o valor segue um padrão específico"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_619",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R620",
    "summary": "Todas as propriedades devem ser declaradas",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem ser declaradas",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as propriedades estão declaradas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Valida os 'formatos' permitidos para um",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*formato*",
    "check_text": "Valide se o campo 'formato' está entre os formatos permitidos",
    "severity": "error",
    "autofix": true,
    "value": [
      "format1",
      "format2",
      "format3"
    ],
    "hints": [
      "Verifique se 'formato' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R622",
    "summary": "atributo (body) ou parâmetro deve ter 'type' definido",
    "scope": "schema+parameters",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties, $.paths.*.parameters[*]",
    "field": "*type*",
    "check_text": "Todos os atributos e parâmetros devem ter o tipo definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o tipo para cada atributo ou parâmetro"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R623",
    "summary": "Tipos devem estar no conjunto permitido",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number",
      "date",
      "date-time",
      "binary",
      "uuid"
    ],
    "check_text": "Tipos devem estar no conjunto permitido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Valida se o atributo (body) ou",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.post",
    "field": "requestBody",
    "check_text": "Todas as operações POST devem ter um atributo 'body' válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o atributo 'body' é válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R625",
    "summary": "Parâmetro deve ter tipo string",
    "scope": "parameters",
    "op": "enum",
    "selector": "$.paths.*.*.parameters[*].type",
    "field": "*",
    "value": [
      "string"
    ],
    "check_text": "Todos os parâmetros devem ter tipo string",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o tipo dos parâmetros segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R626",
    "summary": "Propriedades devem ter formato válido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem ter um formato válido definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o tipo de dado está correto para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Valida os 'formatos' permitidos para um",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*formato*",
    "check_text": "Valide se o campo 'formato' está entre os formatos permitidos",
    "severity": "error",
    "autofix": true,
    "value": [
      "json",
      "xml",
      "csv",
      "yaml"
    ],
    "hints": [
      "Verifique se 'formato' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R628",
    "summary": "atributo (body) ou parâmetro deve ter 'type'",
    "scope": "schema+parameters",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*]|$.paths.*.parameters[*]",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ter o campo 'type'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um tipo para todos os atributos e parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R629",
    "summary": "Tipos de inteiros devem estar no conjunto permitido",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "int8",
      "int16",
      "int32",
      "int64"
    ],
    "check_text": "Tipos de inteiros devem estar no conjunto permitido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R630",
    "summary": "Propriedades devem ser consistentes",
    "scope": "schema+parameters",
    "op": "uniform_all",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*.in",
    "field": "*",
    "check_text": "Propriedades com mesmo nome devem ter definição uniforme",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre {type=string, maxLength=14}"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R631",
    "summary": "Campos devem ter minimum e maximum definidos",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os campos devem ter 'minimum' e 'maximum' definidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Defina 'minimum' e 'maximum' para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R632",
    "summary": "Atributos (body) devem ter description",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades do body devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R01",
    "summary": "Parâmetros devem ser inteiros",
    "scope": "parameters",
    "op": "enum",
    "selector": "$.paths.*.*.parameters[*].type",
    "field": "type",
    "value": [
      "integer"
    ],
    "check_text": "Parâmetros devem ser do tipo inteiro",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' é igual a 'integer'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "O atributo com 'type = number' tem",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[?(@.type=='number')]",
    "field": "*",
    "check_text": "O atributo com 'type = number' deve seguir as regras específicas para tipos numéricos",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o tipo está sendo tratado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R635",
    "summary": "Propriedades devem ter formato definido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades devem ter um formato definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'format' está definido para cada propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R636",
    "summary": "double' deve ter a propriedade 'decimal'",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*double*",
    "value": "decimal",
    "check_text": "Todas as propriedades do tipo 'double' devem ter a propriedade 'decimal'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'decimal' às propriedades do tipo 'double'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R637",
    "summary": "'format' do 'type = string' deve conter",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[?(@.type=='string')].format",
    "field": "*",
    "check_text": "'format' deve ser definido para todos os campos do tipo 'string'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Defina um formato para todos os campos do tipo 'string'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R638",
    "summary": "Campos devem ser datas no formato ISO 8601",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties[*]",
    "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
    "field": "*date*",
    "check_text": "Campos devem ser datas no formato ISO 8601",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: yyyy-mm-dd"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R639",
    "summary": "O atributo 'type' deve ser string",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string"
    ],
    "check_text": "O atributo 'type' deve ser string",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R640",
    "summary": "'format' deve declarar 'maxLength'",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*format*",
    "check_text": "'format' deve declarar 'maxLength'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Adicione maxLength ao campo 'format'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "O 'format' do 'type = integer' deve ser 'int'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*[?(@.type=='integer')]",
    "field": "*",
    "value": [
      "string"
    ],
    "check_text": "O 'format' do 'type = integer' deve ser 'int'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o 'format' é 'int' para todos os campos do tipo 'integer'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R642",
    "summary": "Tipos devem estar no conjunto permitido (int16, int32)",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "int16",
      "int32"
    ],
    "check_text": "Tipos devem estar no conjunto permitido (int16, int32)",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R643",
    "summary": "Todo 'int64' deve ter um atributo ou parâmetro obrigatório",
    "scope": "parameters+schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.type, $.paths.*.parameters[*].type",
    "field": "*int64*",
    "check_text": "Todos os campos 'int64' devem ter um atributo ou parâmetro obrigatório",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um campo obrigatório com tipo 'int64'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R644",
    "summary": "A propriedade declarada deve seguir o tipo definido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades devem seguir o tipo definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R645",
    "summary": "Tipo deve estar no conjunto permitido (int32, int16, int64)",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "int32",
      "int16",
      "int64"
    ],
    "check_text": "Tipos devem estar no conjunto permitido (int32, int16, int64)",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R646",
    "summary": "Campos devem ter no máximo 10 caracteres",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "value": {
      "max": 10
    },
    "check_text": "Qualquer campo deve ter no máximo 10 caracteres",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Defina maxLength=10"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R647",
    "summary": "egerValida se o atributo (body) ou",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.post",
    "field": "requestBody",
    "check_text": "O atributo 'body' deve ser válido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o atributo 'body' segue as regras de validação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Parâmetro do 'type' deve ser inteiro e ter formato válido",
    "scope": "parameters",
    "op": "enum",
    "selector": "$.paths.*.*.parameters[*].format, $.paths.*.*.parameters[*].type",
    "field": "*",
    "value": [
      "integer"
    ],
    "check_text": "Parâmetros devem ter 'type' inteiro e formato válido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'format' é um dos seguintes: int32, int64"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R649",
    "summary": "(int16 ou int32) possui os valores permitidos",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "int16",
      "int32"
    ],
    "check_text": "(int16 ou int32) deve possuir os valores permitidos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R650",
    "summary": "Propridades dentro do range padrão",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem estar dentro do range padrão",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o tipo e tamanho das propriedades estão dentro dos limites especificados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Parâmetro ou Atributo deve ter a",
    "scope": "parameters",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].name",
    "field": "*",
    "check_text": "Parâmetros e atributos devem seguir uma determinada forma",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: use camelCase ou snake_case"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Não defina parâmetros ou atributos com espaços em branco"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R653",
    "summary": "'type' deve ser permitido como integer",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como integer",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Parâmetro ou Atributo com 'type' deve ter valor definido",
    "scope": "parameters+schema properties",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*].type, $.components.schemas.*.properties.*",
    "field": "*type*",
    "check_text": "Todos os parâmetros e atributos devem ter um tipo definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina o tipo para todos os parâmetros e atributos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R655",
    "summary": "integer' deve ter propriedade 'format'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*[*='integer']",
    "field": "*",
    "check_text": "Todas as propriedades que contenham 'integer' devem ter a propriedade 'format'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'format' às propriedades que contenham 'integer'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Responda apenas com JSON válido.",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o parâmetro ou atributo está em formato JSON válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R657",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R658",
    "summary": "'format' deve ser um dos conjuntos permitidos (int16, int32 ou int64)",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "format",
    "value": [
      "int16",
      "int32",
      "int64"
    ],
    "check_text": "'format' deve ser um dos conjuntos permitidos (int16, int32 ou int64)",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'format' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo deve ser nomeado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R660",
    "summary": "'type' deve ser permitido se for integer",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "integer"
    ],
    "check_text": "'type' deve ser permitido se for integer",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R661",
    "summary": "O campo 'minimum' deve ser um número",
    "scope": "schema properties",
    "op": "value_regex",
    "selector": "$.components.schemas.*.properties.*",
    "pattern": "^\\d+(\\.\\d{1,2})?$",
    "field": "*minimum*",
    "check_text": "O campo 'minimum' deve ser um número válido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'minimum' segue o padrão numérico"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "",
    "autofix": false,
    "hints": [
      "Exemplo: Adicione uma regra específica para garantir a presença ou valor fixo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R663",
    "summary": "'type' deve ser permitido como integer",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como integer",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_664",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R665",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Nomes de atributos e parâmetros devem seguir uma convenção consistente",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: use sempre lowerCamelCase ou snake_case"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "'type' deve ter propriedade",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.*.properties.*[?(@.type='integer')]",
    "field": "*",
    "value": {
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "check_text": "'type' deve ter propriedade",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'type' com valor 'string' para todos os campos do tipo 'integer'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_667",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo deve ser nomeado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R669",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R670",
    "summary": "O campo 'maximum' deve conter um número",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*maximum*",
    "check_text": "Todos os campos que contenham 'maximum' devem conter um número",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'maximum' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: evite usar espaços em nomes de parâmetros e atributos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R672",
    "summary": "'type' deve ser permitido como integer",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer"
    ],
    "check_text": "'type' deve ser permitido como integer",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "'maximum' maior ou igual a (valor do campo)",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "value": {
      "min": null,
      "max": "$1"
    },
    "check_text": "'maximum' deve ser maior ou igual a (valor do campo)",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Defina o valor mínimo para garantir que 'maximum' seja maior"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo deve ser nomeado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "'type' deve ter propriedade",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*[?(@.type=='integer')]",
    "field": "*",
    "check_text": "'type' deve ter propriedade",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' possui propriedades"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_676",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo deve ser nomeado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R678",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R679",
    "summary": "'maximum' maior ou igual a 'minimum'. Todo atributo (body) ou parâmetro com int1 type = integer",
    "scope": "schema properties, parameters",
    "op": "length",
    "selector": "$.components.schemas.*.properties[*].type=integer, $.paths.*.parameters[*].type=integer",
    "field": "*",
    "value": {
      "min": 0
    },
    "check_text": "'maximum' deve ser maior ou igual a 'minimum' para todos os atributos e parâmetros com tipo integer",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'maximum' é maior ou igual a 'minimum' para todos os atributos e parâmetros com tipo integer"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R680",
    "summary": "deve possuir os valores informados nas 6 ou int32)",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*dataType*",
    "value": [
      "string",
      "integer"
    ],
    "check_text": "Tipos devem estar no conjunto permitido (6 ou int32)",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'dataType' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R681",
    "summary": "propriedades 'minimum' e 'maximum' devem estar no mesmo conjunto permitido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*minimum*, *maximum*",
    "check_text": "As propriedades 'minimum' e 'maximum' devem estar no mesmo conjunto permitido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os valores de 'minimum' e 'maximum' estão dentro do mesmo intervalo ou são iguais"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R683",
    "summary": "Valor inteiro deve estar no intervalo -2147483648 a 2147483647",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*integer*",
    "value": {
      "min": -2147483648,
      "max": 2147483647
    },
    "check_text": "Valores inteiros devem estar no intervalo -2147483648 a 2147483647",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina minLength=-2147483648 e maxLength=2147483647"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R684",
    "summary": "range deve estar entre -32768 e 32767",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*range*",
    "value": {
      "min": -32768,
      "max": 32767
    },
    "check_text": "Qualquer campo que contenha 'range' no nome deve ter um valor entre -32768 e 32767",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina minLength=-32768 e maxLength=32767"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R685",
    "summary": "Atributo 'body' deve ser válido",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.post",
    "field": "body",
    "check_text": "O atributo 'body' deve ser válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o formato do body está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Parâmetro do 'type' deve ser inteiro e seguir o formato correto",
    "scope": "parameters",
    "op": "enum",
    "selector": "$.paths.*.*.parameters[*].format, $.paths.*.*.parameters[*].type",
    "field": "*",
    "value": [
      "integer"
    ],
    "check_text": "Parâmetros devem seguir o tipo inteiro e o formato correto",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' é inteiro e se 'format' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R687",
    "summary": "(int64) possui os valores das",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*[*]",
    "field": "*",
    "check_text": "'(int64)' deve possuir valores válidos para o tipo inteiro 64 bits",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os valores estão dentro do intervalo permitido para um inteiro 64 bits"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R688",
    "summary": "Propridades dentro do range padrão",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem estar dentro do range padrão definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o tipo e tamanho das propriedades estão dentro dos limites definidos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Parâmetro ou Atributo deve ter a",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Parâmetros ou atributos devem ter apropriada formatação",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o parâmetro ou atributo está corretamente formatado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetros e atributos devem seguir uma nomenclatura consistente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R691",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R692",
    "summary": "Parâmetro ou Atributo com 'type' deve ter valor definido",
    "scope": "parameters+schema properties",
    "op": "ensure",
    "selector": "$.paths.*.*.parameters[*].type, $.components.schemas.*.properties.*",
    "field": "*type*",
    "check_text": "Todos os parâmetros e atributos devem ter um valor definido para 'type'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina um tipo válido para todos os campos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R693",
    "summary": "integer' deve ter propriedade 'format'",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*integer*",
    "check_text": "Todas as propriedades que contenham 'integer' devem ter a propriedade 'format'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione a propriedade 'format' às propriedades que contenham 'integer'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Responda apenas com JSON válido.",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o parâmetro ou atributo está em formato JSON válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "'type' deve ter propriedade",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.*.properties.*[?(@.type=='integer')]",
    "field": "*",
    "value": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "check_text": "'type' deve ter propriedade 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para todos os campos do tipo 'integer'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R696",
    "summary": "'format' deve ser um dos permitidos: int16, int32 ou int64",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*format*",
    "value": [
      "int16",
      "int32",
      "int64"
    ],
    "check_text": "'format' deve ser um dos permitidos: int16, int32 ou int64",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'format' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo deve ser nomeado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "'type' deve ter propriedade",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.*.properties.*[?(@.type='integer')]",
    "field": "*",
    "value": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      },
      "required": [
        "description"
      ]
    },
    "check_text": "'type' deve ter propriedade 'description'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para todos os campos do tipo 'integer'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R699",
    "summary": "O campo 'minimum' deve ser um número",
    "scope": "schema properties",
    "op": "value_regex",
    "selector": "$.components.schemas.*.properties.*[name='minimum']",
    "pattern": "^\\d+(\\.\\d{1,2})?$",
    "field": "*minimum*",
    "check_text": "O campo 'minimum' deve ser um número válido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o valor do campo 'minimum' é um número"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "",
    "autofix": false,
    "hints": [
      "Adicione uma regra mais específica para garantir que os parâmetros e atributos tenham um formato válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R701",
    "summary": "'type' deve ser permitido se for integer",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "integer"
    ],
    "check_text": "'type' deve ser permitido se for integer",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R702",
    "summary": "'minimum' maior ou igual a (valor do campo)",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*minimum*",
    "value": {
      "min": 0
    },
    "check_text": "'minimum' deve ser maior ou igual ao valor do campo",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'minimum' é maior ou igual ao valor do campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo não deve conter espaços"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R704",
    "summary": "'type' deve ser permitido como 'integer' se tiver propriedade",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer' se tiver propriedade",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_705",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o parâmetro ou atributo possui um nome válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R707",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R708",
    "summary": "'maximum' preenchida com um número",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*maximum*",
    "value": {
      "min": 1,
      "type": "number"
    },
    "check_text": "'maximum' deve ser preenchido com um número",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'maximum' é um número"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo não deve conter espaços"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R710",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R711",
    "summary": "'maximum' deve ser maior ou igual ao valor definido",
    "scope": "responses",
    "op": "length",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*maximum*",
    "value": {
      "min": 0
    },
    "check_text": "'maximum' deve ser maior ou igual ao valor definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina um valor maior ou igual para 'maximum'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo deve ser nomeado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R713",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R714",
    "summary": "'maximum' deve ser menor ou igual ao valor definido",
    "scope": "responses",
    "op": "length",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*maximum*",
    "value": {
      "lessThanOrEqualsTo": "valor_do_campo"
    },
    "check_text": "'maximum' deve ser menor ou igual ao valor definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'maximum' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Parâmetro ou Atributo com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Parâmetro ou Atributo com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Parâmetro ou atributo não deve conter espaços"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R716",
    "summary": "'type' deve ser permitido como 'integer'",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean",
      "number"
    ],
    "check_text": "'type' deve ser permitido como 'integer'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R717",
    "summary": "'maximum' maior ou igual a 'minimum'. Todos os atributos (body) ou parâmetros com type = integer",
    "scope": "schema properties, parameters",
    "op": "length",
    "selector": "$.components.schemas.*.properties[*], $.parameters[*]",
    "field": "*",
    "value": {
      "min": 0
    },
    "check_text": "'maximum' deve ser maior ou igual a 'minimum' para todos os atributos e parâmetros com type = integer",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'maximum' é maior ou igual a 'minimum' para todos os atributos e parâmetros com type = integer"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R718",
    "summary": "deve possuir os valores informados nas propriedades",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem possuir os valores informados nas propriedades",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as respostas estão com os valores corretos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R719",
    "summary": "Valores em um range devem ter minimum e maximum definidos",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*minimum* ou *maximum*",
    "check_text": "Valores em um range devem ter tanto 'minimum' quanto 'maximum' definidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Defina ambos os valores para um campo que contenha 'minimum' ou 'maximum'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R720",
    "summary": "Valor deve ser convertido para um tipo",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os valores devem ser convertidos para um tipo válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o valor está sendo convertido corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R721",
    "summary": "Campos devem ser limitados a 53 bits",
    "scope": "schema+parameters",
    "op": "length",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*.name",
    "field": "*",
    "value": {
      "bitLength": 53
    },
    "check_text": "Campos devem ser limitados a 53 bits",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o tamanho dos campos está dentro do limite de 53 bits"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R722",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R723",
    "summary": "Spectral deve abrir um issue no GitHub",
    "scope": "OTHER",
    "op": "update",
    "selector": "*",
    "field": "github.issues",
    "value": "open a new issue",
    "check_text": "Spectral deve abrir um issue no GitHub quando detecta defeitos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use o comando 'git issue open' para criar uma nova issue"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R724",
    "summary": "range deve estar entre valores permitidos",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*range*",
    "value": {
      "min": -9223372036854775807,
      "max": 9223372036854775807
    },
    "check_text": "Valores de 'range' devem estar entre valores permitidos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'range' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_725",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R05",
    "summary": "Enum deve estar no conjunto permitido",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*enum*",
    "value": [
      "valor1",
      "valor2",
      "valor3"
    ],
    "check_text": "Enum deve estar no conjunto permitido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'enum' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R727",
    "summary": "Tipo deve ser inteiro",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "integer"
    ],
    "check_text": "Tipos devem ser inteiros",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R728",
    "summary": "Domínios devem ser declarados com aspas",
    "scope": "servers",
    "op": "update",
    "selector": "$.servers[*].url",
    "field": "*",
    "value": "\"*\"",
    "check_text": "Domínios devem ser declarados com aspas",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: \"http://Caminho_backend/api/fees/v2\""
    ],
    "oas_version": null
  },
  {
    "rule_code": "R729",
    "summary": "oNomeValida atributos (body) ou parâmetros",
    "scope": "schema+parameters",
    "op": "regex",
    "selector": "$.components.schemas.*.properties[*].name, $.paths.*.parameters[*].name",
    "pattern": "^[a-zA-Z0-9]+$",
    "field": "*",
    "check_text": "Atributos e parâmetros devem seguir o padrão de nome válido (somente letras e números)",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R730",
    "summary": "Campos com mesmo nome devem ter definição uniforme",
    "scope": "schema+parameters",
    "op": "update",
    "selector": "$.components.schemas.*.properties, $.paths.*.parameters[*]",
    "field": "*",
    "check_text": "Campos iguais em diferentes locais devem ter os mesmos atributos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre {type=string, maxLength=14}"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R731",
    "summary": "Atributo ou parâmetro não deve ser declarado",
    "scope": "schema+parameters",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Nenhum atributo ou parâmetro deve ser declarado",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se não há atributos ou parâmetros desnecessários"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R732",
    "summary": "Respostas não podem ser enviadas duplicadas",
    "scope": "responses",
    "op": "unique",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Respostas devem ser únicas em cada operação",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todas as respostas são únicas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R733",
    "summary": "Atributo ou parâmetro com 'type' deve ter valor definido",
    "scope": "schema+parameters",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*].type",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ter um valor definido para 'type'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina um tipo válido para todos os atributos e parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R734",
    "summary": "integer' foi declarado mais de uma vez",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*[*='integer']",
    "field": "*",
    "check_text": "O tipo 'integer' foi declarado mais de uma vez",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos que contêm 'integer' são necessários"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R735",
    "summary": "Propriedades com mesmo nome devem ter o mesmo formato",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*.format",
    "field": "*",
    "check_text": "Propriedades iguais em diferentes locais devem ter o mesmo formato",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre o mesmo formato"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R736",
    "summary": "Atributo ou parâmetro declarado",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties, $.paths.*.parameters[*]",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ser declarados",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos e parâmetros estão declarados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R737",
    "summary": "Campos repetidos devem ter o mesmo valor",
    "scope": "schema+parameters",
    "op": "uniform_all",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Campos repetidos em diferentes locais devem ter o mesmo valor",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre o mesmo valor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R738",
    "summary": "distintos nas propriedades 'maximum'",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].maximum",
    "field": "*",
    "check_text": "As propriedades 'maximum' devem ser distintas entre si",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as propriedades 'maximum' são únicas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R739",
    "summary": "Atributo ou parâmetro declarado",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ser declarados",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos e parâmetros estão declarados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R740",
    "summary": "Campos repetidos devem ter o mesmo valor",
    "scope": "schema+parameters",
    "op": "uniform_all",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Campos repetidos devem ter o mesmo valor",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre o mesmo valor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R741",
    "summary": "distintos nas propriedades 'minimum'",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].minimum",
    "field": "*",
    "check_text": "As propriedades 'minimum' devem ser distintas entre si",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as propriedades 'minimum' são únicas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R742",
    "summary": "Atributo ou parâmetro declarado",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ser declarados",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos e parâmetros estão declarados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Regra 743: mais de uma vez e em um deles falta a",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os campos devem ser preenchidos corretamente",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos estão preenchidos corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R744",
    "summary": "Propriedade 'minimum' deve existir em objetos que aceitam valores numéricos",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*minimum*",
    "check_text": "Todas as propriedades que aceitam valores numéricos devem ter a propriedade 'minimum'",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma propriedade 'minimum' com um valor válido para cada campo que aceite valores numéricos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Atributo ou Parâmetro  com",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Atributo ou Parâmetro  com",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o atributo ou parâmetro possui um nome válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "'type' deve ser único",
    "scope": "schema properties",
    "op": "unique",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "check_text": "'Type' deve ser único em todas as definições",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão único"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R747",
    "summary": "Propriedades com formato devem seguir o padrão definido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].format",
    "field": "*",
    "check_text": "Propriedades com formato devem seguir o padrão definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se os formatos estão sendo usados corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R748",
    "summary": "Atributo ou parâmetro foi declarado",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ser declarados",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos e parâmetros estão declarados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R749",
    "summary": "Campos repetidos devem ter o mesmo valor",
    "scope": "schema+parameters",
    "op": "uniform_all",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Campos repetidos devem ter o mesmo valor",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre o mesmo valor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R750",
    "summary": "distintos nas propriedades 'maxLength'",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].maxLength",
    "field": "*",
    "check_text": "As propriedades 'maxLength' devem ser distintas entre si",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as propriedades 'maxLength' são únicas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R751",
    "summary": "Atributo ou Parâmetro foi declarado",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*, $.paths.*.parameters[*]",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ser declarados",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos e parâmetros estão declarados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R752",
    "summary": "Campos repetidos devem ter o mesmo valor",
    "scope": "schema+parameters",
    "op": "uniform_all",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Campos repetidos devem ter o mesmo valor",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre o mesmo valor"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R753",
    "summary": "distintos nas propriedades 'minLength'",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].minLength",
    "field": "*",
    "check_text": "As propriedades 'minLength' devem ser distintas entre si",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se as propriedades 'minLength' são únicas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R754",
    "summary": "Atributo ou parâmetro foi declarado",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ser declarados",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se todos os atributos e parâmetros estão declarados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Regra 755: mais de uma vez e em um deles falta a",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os campos especificados na regra 755 devem estar presentes e corretos em todas as ocorrências",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos especificados na regra 755 estão presentes e corretos em todas as ocorrências"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R12",
    "summary": "Propriedades devem ter minLength definida",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todas as propriedades devem ter minLength definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina minLength para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R757",
    "summary": "Atributo ou parâmetro com 'type' deve ter valor definido",
    "scope": "schema+parameters",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*].type",
    "field": "*",
    "check_text": "Todos os atributos e parâmetros devem ter um valor definido para 'type'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina um tipo válido para todos os atributos e parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R758",
    "summary": "number' foi declarado mais de uma vez",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*.name",
    "field": "*number*",
    "check_text": "'number' deve ser declarado apenas uma vez em cada esquema ou parâmetro",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se 'number' está sendo usado corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R759",
    "summary": "Valores devem ser distintos nas respostas",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todos os valores devem ser distintos nas respostas",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os valores são únicos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R760",
    "summary": "Propriedades com mesmo nome e características distintas",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*.name",
    "field": "*",
    "check_text": "Propriedades com mesmo nome devem ter características consistentes",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se propriedades e atributos com o mesmo nome possuem as mesmas configurações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R761",
    "summary": "Todos os endpoints devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Todas as operações devem ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R762",
    "summary": "Atributos/Parâmetros com mesmo Name devem ter definição uniforme",
    "scope": "schema+parameters",
    "op": "update",
    "selector": "$.components.schemas.*.properties, $.paths.*.parameters[*]",
    "field": "*",
    "check_text": "Atributos/Parâmetros iguais em diferentes locações devem ter os mesmos atributos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre {type=string, maxLength=14}"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R763",
    "summary": "Se type for integer, deve ser um número inteiro",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*[?(@.type=='integer')]",
    "field": "*",
    "check_text": "Se o campo 'type' for 'integer', deve ser um número inteiro",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' é realmente 'integer' e que o valor corresponda a esse tipo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R764",
    "summary": "Tipo deve ser int16, int32 ou int64",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "int16",
      "int32",
      "int64"
    ],
    "check_text": "Tipos devem estar no conjunto permitido (int16, int32 ou int64)",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R765",
    "summary": "Conteúdo deve ser válido em todas as propriedades",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem conter um valor válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os valores das propriedades estão corretos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R766",
    "summary": "Campos devem ter um valor mínimo e máximo definidos",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os campos devem ter um valor mínimo e máximo definidos",
    "severity": "error",
    "autofix": true,
    "value": {
      "min": 1,
      "max": 255
    },
    "hints": [
      "Defina minLength e maxLength para todos os campos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R767",
    "summary": "Todos os endpoints devem ter 'existir' em todos",
    "scope": "paths",
    "op": "ensure",
    "selector": "$.paths.*",
    "field": "operationId",
    "check_text": "Todas as operações devem ter o operationId 'existir'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione operationIds com o valor 'existir' em todos os endpoints"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R768",
    "summary": "Todos os tipos devem ter formato definido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os tipos devem ter um formato definido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Defina o tipo com um formato válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R769",
    "summary": "Propriedades devem ter maxLength definida",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "value": {
      "min": 0,
      "max": null
    },
    "check_text": "Todas as propriedades devem ter maxLength definida",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Defina um valor para maxLength em todas as propriedades"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "minLength (é opcional, mas se existir tem que)",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Se o campo 'minLength' for definido em uma propriedade, ele deve ser obrigatório e ter um valor válido.",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o campo 'minLength' está definido corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R771",
    "summary": "Campos de tipo string não devem ter tamanho definido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Campos de tipo string não devem ter tamanho definido",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o campo 'type' é realmente string"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R772",
    "summary": "Formato deve ser base64, date, date-time ou uuid",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*format*",
    "value": [
      "base64",
      "date",
      "date-time",
      "uuid"
    ],
    "check_text": "Formato deve ser base64, date, date-time ou uuid",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'format' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R773",
    "summary": "Se type for number, deve ser possível definir um valor mínimo e máximo",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*[?(@.type=='number')]",
    "field": "*",
    "value": {
      "min": 1,
      "max": 2147483647
    },
    "check_text": "Se o tipo for 'number', deve ser possível definir um valor mínimo e máximo",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Defina minLength e maxLength para campos do tipo number"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R32",
    "summary": "Formato deve ser double",
    "scope": "responses",
    "op": "value_regex",
    "selector": "$.paths.*.*.responses[*].schema.type",
    "pattern": "^double$",
    "field": "type",
    "check_text": "Formato deve ser double",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' é igual a 'double'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R775",
    "summary": "Integer e casas decimais devem ter exatamente 10 dígitos",
    "scope": "schema properties",
    "op": "length",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*10* ou *6*",
    "value": {
      "min": 10,
      "max": 10
    },
    "check_text": "Qualquer campo que contenha '10' ou '6' no nome deve ter exatamente 10 dígitos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina minLength=10 e maxLength=10"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Titulo da regra",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Descrição da regra",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Sugestão de correção"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R777",
    "summary": "peNumberValida se o conteúdo da propriedade 'e' for um número válido",
    "scope": "schema properties",
    "op": "value_regex",
    "selector": "$.components.schemas.*.properties.*",
    "pattern": "^\\d+$",
    "field": "*e*",
    "check_text": "Se a propriedade 'e' for um número, deve ser um número válido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o conteúdo da propriedade 'e' é um número"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "de um atributo (body) ou xample deve ser um JSON válido",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Todos os atributos (body) ou xample devem ser um JSON válido",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o schema é válido"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R779",
    "summary": "Parâmetro é válido de acordo com a regex",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-zA-Z0-9]+$",
    "field": "*",
    "check_text": "Parâmetros devem seguir o padrão alfanumérico",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Campo '.type' deve ser definido",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*type*",
    "field": "*type*",
    "check_text": "Todas as propriedades devem ter o campo 'type' definido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um tipo para a propriedade"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R781",
    "summary": "Valida se o conteúdo da propriedade 'e' é válido",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*e*",
    "check_text": "Valida se o conteúdo da propriedade 'e' é válido",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o valor de 'e' segue as regras esperadas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "' de um atributo (body) ou example deve ser uma string",
    "scope": "responses",
    "op": "value_regex",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "pattern": "^#/components/schemas/.+$",
    "field": "*",
    "check_text": "' deve ser uma string válida",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o tipo da propriedade é string"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R783",
    "summary": "Parâmetro é válido de acordo com a regex",
    "scope": "parameters",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name",
    "pattern": "^[a-zA-Z0-9]+$",
    "field": "*",
    "check_text": "Parâmetros devem seguir o padrão alfanumérico",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: investmentFundName"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R784",
    "summary": "Spaces não são permitidos em nomes de atributos ou parâmetros",
    "scope": "parameters+schema properties",
    "op": "regex",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "pattern": "^[a-zA-Z0-9_]*$",
    "field": "*",
    "check_text": "Nomes de atributos e parâmetros não podem conter espaços",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Use underscores ou camelCase para nomes de atributos e parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R785",
    "summary": "Propriedade 'pattern' deve ser definida em atributos que aceitam valores string",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties[*]",
    "field": "*",
    "check_text": "Todas as propriedades devem ter a propriedade 'pattern' definida se aceitarem valores string",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma regra para validar o formato dos valores strings"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R786",
    "summary": "Parâmetros e body não devem conter 'conter'",
    "scope": "parameters+body",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].name, $.paths.*.*.requestBody.content.*",
    "field": "*",
    "check_text": "Parâmetros e body não devem conter 'conter'",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os parâmetros e o body não contêm a palavra 'conter'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R787",
    "summary": "Separador de decimal sendo ','",
    "scope": "responses",
    "op": "regex",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "pattern": "^#/components/schemas/.*(number|integer).*$",
    "field": "*decimal*",
    "check_text": "Separador de decimal deve ser '.'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina separador decimal como '.'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R788",
    "summary": "Ponto deve ser usado em caminhos",
    "scope": "paths",
    "op": "update",
    "selector": "$.paths[*]",
    "field": "*",
    "value": "*.",
    "check_text": "Caminhos devem seguir a notação '.' (ponto)",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Use '.' em vez de '/' ou outros caracteres não-alfanuméricos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R789",
    "summary": "Valida se a propriedade 'pattern' existe",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*pattern*",
    "check_text": "Todas as propriedades devem ter a propriedade 'pattern'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione uma propriedade 'pattern' para cada campo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R790",
    "summary": "um atributo (body) ou parâmetro com",
    "scope": "parameters+schema properties",
    "op": "OTHER",
    "selector": "$.paths.*.*.parameters[*].name, $.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Nenhum atributo (body) ou parâmetro deve conter espaços em branco",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Use underscores (_) ou camelCase para separar palavras"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R791",
    "summary": "'type' deve ser string, integer ou boolean",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean"
    ],
    "check_text": "'Type' deve ser string, integer ou boolean",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_792",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R793",
    "summary": "Todos os endpoints devem ter um caminho válido",
    "scope": "paths",
    "op": "OTHER",
    "selector": "$.paths.*",
    "field": "*",
    "check_text": "Cada endpoint deve seguir o padrão /{verbo}/{caminho}",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se os caminhos dos endpoints estão no formato correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R794",
    "summary": "A propriedade 'pattern' deve ser usada corretamente",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "pattern",
    "check_text": "A propriedade 'pattern' deve ser usada corretamente para validar formato de nomes de atributos ou parâmetros, URLs e padrões textuais.",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a propriedade 'pattern' está sendo usada corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R795",
    "summary": "'vírgula' como separador de decimal",
    "scope": "responses",
    "op": "update",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "value": "$.components.schemas.numberWithCommaDecimal",
    "check_text": "'vírgula' deve ser usado como separador de decimal em todos os campos numéricos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina o schema para number com ',' como separador de decimal"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R796",
    "summary": "Utilizar 'ponto' no conteúdo da propriedade",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*example*",
    "value": "*ponto*",
    "check_text": "Utilize 'ponto' no conteúdo da propriedade example",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: example: 'valor exemplo'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R797",
    "summary": "type deve ser string, integer ou boolean",
    "scope": "schema properties",
    "op": "enum",
    "selector": "$.components.schemas.*.properties.*",
    "field": "type",
    "value": [
      "string",
      "integer",
      "boolean"
    ],
    "check_text": "Tipos devem estar no conjunto permitido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se 'type' segue o padrão JSON Schema"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R798",
    "summary": "Conteúdo da propriedade deve ser válido de acordo com o exemplo",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "O conteúdo da propriedade deve ser válido de acordo com o exemplo",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se o conteúdo segue o padrão do exemplo"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R799",
    "summary": "com o de seu respeitivo atributo ou parâmetro, pattern",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].pattern",
    "field": "*",
    "check_text": "Atributos e parâmetros devem ter um padrão definido por 'pattern'",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Defina um padrão para atributos e parâmetros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R800",
    "summary": "Valida se um campo relacionado ao tipo não é do tipo number",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*",
    "check_text": "Todos os campos relacionados ao tipo devem ser do tipo number",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se o campo está correto"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R801",
    "summary": "Possuir vírgula como separador decimal",
    "scope": "schema properties",
    "op": "update",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*decimal*",
    "value": "*comma*",
    "check_text": "Todos os campos que contenham 'decimal' no nome devem usar vírgula como separador decimal",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Defina o formato de número para usar vírgula como separador decimal"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R802",
    "summary": "Atributos do tipo number devem seguir o padrão pattern=^[-+]?[0-9]*(\\.[0-9]+)?$",
    "scope": "schema properties",
    "op": "regex",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*number*",
    "pattern": "^[-+]?[0-9]*(\\.[0-9]+)?$",
    "check_text": "Atributos do tipo number devem seguir o padrão pattern=^[-+]?[0-9]*(\\.[0-9]+)?$",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Exemplo: amount"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R803",
    "summary": "NomeValida se foram declaradas classes",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Se houverem classes declaradas, elas devem ter nomes válidos",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se as classes têm nomes válidos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R804",
    "summary": "Campos com mesmo nome devem ter definição uniforme",
    "scope": "schema+parameters",
    "op": "update",
    "selector": "$.components.schemas.*.properties, $.paths.*.parameters[*]",
    "field": "*",
    "check_text": "Campos iguais em diferentes locações devem ter os mesmos atributos",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Exemplo: managerDocumentNumber deve ter sempre {type=string, maxLength=14}"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R805",
    "summary": "Características diferentes",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "As características devem ser consistentes entre si",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as características seguem o mesmo padrão"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Regra específica não definida",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Regra específica não definida",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Defina a regra de acordo com as instruções fornecidas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R807",
    "summary": "Classe deve ser reutilizada",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].extensions.x-classname",
    "field": "*",
    "check_text": "A classe deve ser reutilizada em outros servidores",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se a classe está sendo reutilizada em outros servidores"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R808",
    "summary": "Se classes com mesmo nome e estruturas distintas,",
    "scope": "OTHER",
    "op": "update",
    "selector": "*",
    "field": "*",
    "check_text": "Se classes com mesmo nome e estruturas distintas,",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se classes com o mesmo nome possuem a mesma estrutura"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R809",
    "summary": "Não é permitido reutilizar. Não declaradas com o $ref.Error oas2",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*]",
    "field": "*",
    "check_text": "Não é permitido reutilizar servidores sem referenciar com $ref.Error oas2",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os servidores estão declarados corretamente"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R810",
    "summary": "Existe classe declarada no componente",
    "scope": "components",
    "op": "ensure",
    "selector": "$.components.*",
    "field": "*",
    "check_text": "Todas as classes devem ser declaradas no componente",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se todas as classes estão declaradas no componente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R811",
    "summary": "Definições devem ser usadas em algum lugar",
    "scope": "definitions",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todas as definições devem ser usadas em algum lugar",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todas as definições estão sendo usadas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R812",
    "summary": "Não deve haver nenhum payload",
    "scope": "operations",
    "op": "OTHER",
    "selector": "$.paths.*.*",
    "field": "*",
    "check_text": "Nenhuma operação deve ter um payload",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se não há nenhum payload em suas operações"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R999",
    "summary": "Campos devem ser usados",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Todos os campos declarados devem ser utilizados",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se todos os campos declarados estão sendo usados"
    ],
    "oas_version": "oas2"
  },
  {
    "rule_code": "R814",
    "summary": "A classe MetaXX deve ser válida",
    "scope": "schema properties",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*MetaXX*",
    "check_text": "A classe MetaXX deve seguir as regras definidas",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a classe MetaXX segue o padrão esperado"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Todas as operações devem ter description",
    "scope": "operations",
    "op": "ensure",
    "selector": "$.paths.*.*",
    "field": "description",
    "check_text": "Cada operação deve ter uma descrição",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione uma descrição para cada operação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R816",
    "summary": "Nome de campo deve ser fornecido",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Regra de erro não utiliza o nome do campo",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Adicione um campo alvo para a regra"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Valida se a estrutura da declaração do",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Valida se a estrutura da declaração do",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Exemplo: Verifique se a declaração está correta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R818",
    "summary": "Envolvimento de erros em 'erros' ou 'errors'",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.errors",
    "field": "*",
    "check_text": "Todos os erros devem estar em 'erros' ou 'errors'",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Use sempre 'erros' ou 'errors' para envolver todos os erros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R819",
    "summary": "A classe 'MetaXX' não deve ser usada",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties, $.components.parameters.*, *.paths.*",
    "field": "*",
    "check_text": "A classe 'MetaXX' não deve ser usada em nenhum campo ou recurso",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use apenas as classes definidas pelo OpenAPI"
    ],
    "oas_version": null
  },
  {
    "rule_code": "",
    "summary": "Não é permitido utilizar o nome de",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Não é permitido utilizar o nome de",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use nomes que não sejam proibidos"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_821",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R822",
    "summary": "Utilizar outro nome de classe",
    "scope": "servers",
    "op": "OTHER",
    "selector": "$.servers[*].className",
    "field": "*",
    "check_text": "Nomes de classes devem ser consistentes e seguir um padrão",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se os nomes de classes estão de acordo com a especificação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Não é permitido classe 'Meta' na",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Não é permitido a classe 'Meta' em nenhum lugar",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Remova qualquer referência à classe 'Meta'"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "Utilizar um nome de campo válido",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "*",
    "field": "*situação de erro*",
    "check_text": "Nomes de campos devem ser válidos",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Utilize nomes de campos que sigam as regras de nomeação"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R825",
    "summary": "Não foi declarada classe 'MetaXXX'",
    "scope": "schema+parameters",
    "op": "OTHER",
    "selector": "$.components.schemas.*.properties[*].type",
    "field": "*",
    "check_text": "'MetaXXX' não foi declarada como classe para nenhum campo",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Verifique se a classe 'MetaXXX' foi declarada corretamente"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R826",
    "summary": "Não permitir a declaração da classe padrão em Meta - envelopamento da situação de erro",
    "scope": "responses",
    "op": "OTHER",
    "selector": "$.paths.*.*.responses[*].content.application/json.schema.$ref",
    "field": "*",
    "check_text": "Não permitir a declaração da classe padrão em Meta - envelopamento da situação de erro",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use uma estrutura personalizada para envolver a situação de erro"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R827",
    "summary": "Nomes de classes permitidos",
    "scope": "servers+paths+parameters+responses+schemas",
    "op": "OTHER",
    "selector": "*",
    "field": "*",
    "check_text": "Nomes de classes devem seguir o padrão PascalCase ou snake_case",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Exemplo: InvestmentFundName ou investment_fund_name"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R828",
    "summary": "Erro deve conter status e title",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todos os erros devem conter status e title",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione status e title em todos os erros"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R829",
    "summary": "Código do erro de negócio deve existir",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.properties.code",
    "field": "code",
    "check_text": "Todas as operações devem ter um código do erro de negócio",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione o campo 'code' nas respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R830",
    "summary": "Mensagem de erro deve ser fornecida",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*].content.application/json.examples.*",
    "field": "*errorMessage*",
    "check_text": "Todas as respostas devem conter uma mensagem de erro",
    "severity": "warning",
    "autofix": true,
    "hints": [
      "Adicione um exemplo de mensagem de erro"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R831",
    "summary": "Respostas devem conter statusCode e description",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as respostas devem ter statusCode e description",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione statusCode e description em todas as respostas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R832",
    "summary": "Somente o parâmetro deve ser passado na query",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.queryParameters[*]",
    "field": "*",
    "check_text": "Só um parâmetro deve ser passado na query",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se apenas um parâmetro está sendo passado na query"
    ],
    "oas_version": null
  },
  {
    "rule_code": "RXX",
    "summary": "'type' ou 'requestBody' devem ser único",
    "scope": "operations",
    "op": "unique",
    "selector": "$.paths.*.*",
    "field": "type, requestBody",
    "check_text": "'type' e 'requestBody' devem ser únicos em cada operação",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Renomeie 'type' ou 'requestBody' duplicados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R834",
    "summary": "Payload deve conter um valor",
    "scope": "responses",
    "op": "ensure",
    "selector": "$.paths.*.*.responses[*]",
    "field": "*",
    "check_text": "Todas as operações devem ter um payload válido",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Adicione um payload válido para cada resposta"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R835",
    "summary": "Não é permitido 'payload' nos endpoints",
    "scope": "paths",
    "op": "OTHER",
    "selector": "$.paths[*]",
    "field": "*",
    "check_text": "Não é permitido o uso de 'payload' nos endpoints",
    "severity": "error",
    "autofix": false,
    "hints": [
      "Use nomes de recursos ou verbs HTTP adequados"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R_FAIL_836",
    "oas_version": null,
    "summary": "Falha ao interpretar",
    "scope": "OTHER",
    "op": "OTHER",
    "selector": "$",
    "field": "*",
    "check_text": "Erro ao decodificar regra",
    "severity": "error",
    "hints": [
      "Revisar manualmente"
    ],
    "autofix": false
  },
  {
    "rule_code": "R837",
    "summary": "RequestBody - Declaração de parâmetros com a chamada de $ref é válida",
    "scope": "schema properties",
    "op": "ensure",
    "selector": "$.components.schemas.*.properties.*",
    "field": "*$ref*",
    "check_text": "Declaração de parâmetros com a chamada de $ref é válida em RequestBody",
    "severity": "warning",
    "autofix": false,
    "hints": [
      "Verifique se as declarações de parâmetros com $ref estão corretas"
    ],
    "oas_version": null
  },
  {
    "rule_code": "R838",
    "summary": "Parâmetro body deve ser um objeto",
    "scope": "parameters",
    "op": "ensure",
    "selector": "$.paths.*.post.requestBody.content.application/json.schema$",
    "field": "*",
    "check_text": "Todos os parâmetros do tipo 'body' devem ser um objeto",
    "severity": "error",
    "autofix": true,
    "hints": [
      "Verifique se o schema do body é um objeto"
    ],
    "oas_version": "oas2"
  }
]